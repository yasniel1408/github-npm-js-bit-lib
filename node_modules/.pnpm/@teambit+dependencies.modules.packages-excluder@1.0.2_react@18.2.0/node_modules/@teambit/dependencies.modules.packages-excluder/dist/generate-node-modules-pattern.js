"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.generateNodeModulesPattern = exports.PatternTarget = void 0;
var PatternTarget;
(function (PatternTarget) {
    /**
     * Used in Jest `transformIgnorePatterns` options
     */
    PatternTarget["JEST"] = "jest";
    /**
     * Used in Webpack `snapshot.managedPaths` options
     */
    PatternTarget["WEBPACK"] = "webpack";
})(PatternTarget = exports.PatternTarget || (exports.PatternTarget = {}));
const patternTargetMap = {
    [PatternTarget.JEST]: toJestPattern,
    [PatternTarget.WEBPACK]: toWebpackPattern,
};
/**
 * A function that receives an array of packages names and returns a pattern (string) of a regex that matches any node_modules/package-name except the provided package-names.
 * @param {string[]} packages - array of packages.
 * @returns {string} node modules catched packages regex.
 */
function generateNodeModulesPattern(options = {}) {
    const { packages = [], excludeComponents, target = PatternTarget.JEST } = options;
    const negativeLookaheadPatterns = packages.reduce((acc, packageName) => {
        const yarnPattern = packageName.replace(/\//g, '[\\/]');
        const pnpmPackageName = packageName.replace(/\//g, '\\+');
        const pnpmPattern = `\\.pnpm[\\/](.*[+\\/])?${pnpmPackageName}.*`;
        return [...acc, yarnPattern, pnpmPattern];
    }, []);
    if (excludeComponents) {
        negativeLookaheadPatterns.push('@[^/]+/([^/]+\\.)+[^/]+', '\\.pnpm/(.+[+/])?@[^+]+\\+([^+]+\\.)+[^+]+', '\\.pnpm/.+/node_modules/@[^/]+/([^/]+\\.)+[^/]+');
    }
    return patternTargetMap[target](negativeLookaheadPatterns);
}
exports.generateNodeModulesPattern = generateNodeModulesPattern;
function toJestPattern(patterns) {
    return `node_modules/(?!(${patterns.join('|')})/)`;
}
/**
 * Webpack managed paths evaluate absolutes paths to `package.json` files.
 * We need to generate a pattern that excludes the `package.json` files of the bit component packages.
 * Example:
 * - Component package: `@my-org/my-scope.components`
 * - Webpack path: `/Users/aUser/dev/bit-example/node_modules/@my-org/my-scope.components/package.json`
 * - RegExp to exclude this path from managed paths: `/^(.+?[\\/]node_modules[\\/](?!(@my-org[\\/]my-scope.components))(@.+?[\\/])?.+?)[\\/]/`
 */
function toWebpackPattern(patterns) {
    return patterns.map((pattern) => {
        return `^(.+?[\\/]node_modules[\\/](?!(${pattern}))(@.+?[\\/])?.+?)[\\/]`;
    });
}
//# sourceMappingURL=generate-node-modules-pattern.js.map