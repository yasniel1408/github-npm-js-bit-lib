import { Logger } from '@teambit/logger';
import { HarmonyWorker } from '@teambit/worker';
import { Tester, CallbackFn, TesterContext, Tests } from '@teambit/tester';
import { EnvHandler } from '@teambit/envs';
import type { JestWorker } from './jest.worker';
import { JestOptions, JestTesterOptions } from './jest-options';
export declare class JestTester implements Tester {
    readonly id: string;
    readonly jestConfig: string;
    private jestModulePath;
    private jestWorker;
    private logger;
    private opts;
    private readonly jestModule;
    constructor(id: string, jestConfig: string, jestModulePath: string, jestWorker: HarmonyWorker<JestWorker>, logger: Logger, opts?: JestTesterOptions);
    configPath: string;
    displayName: string;
    _callback: CallbackFn | undefined;
    displayConfig(): string;
    version(): string;
    private attachTestsToComponent;
    private buildTestsObj;
    private getErrors;
    onTestRunComplete(callback: CallbackFn): Promise<void>;
    test(context: TesterContext): Promise<Tests>;
    watch(context: TesterContext): Promise<Tests>;
    private patternsToArray;
    private resolveComponentPattern;
    private resolvePattern;
    static from(options: JestOptions): EnvHandler<Tester>;
}
