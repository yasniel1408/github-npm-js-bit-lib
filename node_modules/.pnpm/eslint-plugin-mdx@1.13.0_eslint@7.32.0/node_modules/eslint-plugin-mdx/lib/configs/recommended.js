"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.recommended = void 0;
const package_json_1 = require("eslint/package.json");
const base_1 = require("./base");
const minorVersion = +package_json_1.version.split('.').slice(0, 2).join('.');
exports.recommended = Object.assign(Object.assign({}, base_1.base), { rules: {
        'mdx/no-jsx-html-comments': 2,
        'mdx/no-unused-expressions': 2,
        'mdx/remark': 1,
        'no-unused-expressions': 0,
    } });
const OVERRIDES_AVAILABLE_VERSION = 6.4;
// overrides in npm pkg is supported after v6.4.0
// istanbul ignore else
if (minorVersion >= OVERRIDES_AVAILABLE_VERSION) {
    const overrides = [
        {
            files: '*.mdx',
            extends: 'plugin:mdx/overrides',
        },
        {
            files: '**/*.{md,mdx}/**',
            extends: 'plugin:mdx/code-blocks',
        },
    ];
    try {
        // eslint-disable-next-line node/no-extraneous-require
        require.resolve('prettier');
        // eslint-disable-next-line node/no-extraneous-require
        require.resolve('eslint-plugin-prettier');
        overrides.push({
            files: '*.md',
            rules: {
                'prettier/prettier': [
                    2,
                    {
                        parser: 'markdown',
                    },
                ],
            },
        }, {
            files: '*.mdx',
            rules: {
                'prettier/prettier': [
                    2,
                    {
                        parser: 'mdx',
                    },
                ],
            },
        });
    }
    catch (_a) { }
    Object.assign(exports.recommended, {
        overrides,
    });
}
//# sourceMappingURL=recommended.js.map