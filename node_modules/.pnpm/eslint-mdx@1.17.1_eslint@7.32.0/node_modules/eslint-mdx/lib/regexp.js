"use strict";
// based on https://github.com/mdx-js/mdx/blob/master/packages/remark-mdx/tag.js
Object.defineProperty(exports, "__esModule", { value: true });
exports.isSelfClosingTag = exports.isOpenCloseTag = exports.isComment = exports.isCloseTag = exports.isOpenTag = exports.COMMENT_CONTENT_REGEX_GLOBAL = exports.COMMENT_CONTENT_REGEX = exports.COMMENT_REGEX = exports.SELF_CLOSING_TAG_REGEX = exports.OPEN_CLOSE_TAG_REGEX = exports.CLOSE_TAG_REGEX = exports.OPEN_TAG_REGEX = exports.commentContent = exports.commentClose = exports.commentOpen = exports.comment = exports.selfClosingTag = exports.closeTag = exports.openTag = void 0;
const dotAllPolyfill = '[\0-\uFFFF]';
const attributeName = '[a-zA-Z_:][a-zA-Z0-9:._-]*';
const unquoted = '[^"\'=<>`\\u0000-\\u0020]+';
const singleQuoted = "'[^']*'";
const doubleQuoted = '"[^"]*"';
const jsProps = '{.*}'.replace('.', dotAllPolyfill);
const attributeValue = '(?:' +
    unquoted +
    '|' +
    singleQuoted +
    '|' +
    doubleQuoted +
    '|' +
    jsProps +
    ')';
const attribute = '(?:\\s+' + attributeName + '(?:\\s*=\\s*' + attributeValue + ')?)';
exports.openTag = '<[A-Za-z]*[A-Za-z0-9\\.\\-]*' + attribute + '*\\s*>';
exports.closeTag = '<\\s*\\/[A-Za-z]*[A-Za-z0-9\\.\\-]*\\s*>';
exports.selfClosingTag = '<[A-Za-z]*[A-Za-z0-9\\.\\-]*' + attribute + '*\\s*\\/?>';
exports.comment = '<!--(?:[^-]|-(?:[^-]|-+[^->]))*-*-->';
exports.commentOpen = '(<!---*)';
exports.commentClose = '(-*-->)';
exports.commentContent = `${exports.commentOpen}([\\s\\S]*?)${exports.commentClose}`;
exports.OPEN_TAG_REGEX = new RegExp(`^(?:${exports.openTag})$`);
exports.CLOSE_TAG_REGEX = new RegExp(`^(?:${exports.closeTag})$`);
exports.OPEN_CLOSE_TAG_REGEX = new RegExp(`^(?:${exports.openTag + '[^<]*' + exports.closeTag})$`);
exports.SELF_CLOSING_TAG_REGEX = new RegExp(`^(?:${exports.selfClosingTag})$`);
exports.COMMENT_REGEX = new RegExp(`^(?:${exports.comment})$`);
exports.COMMENT_CONTENT_REGEX = new RegExp(exports.commentContent);
exports.COMMENT_CONTENT_REGEX_GLOBAL = new RegExp(exports.commentContent, 'g');
const isOpenTag = (text) => exports.OPEN_TAG_REGEX.test(text.trim());
exports.isOpenTag = isOpenTag;
const isCloseTag = (text) => exports.CLOSE_TAG_REGEX.test(text.trim());
exports.isCloseTag = isCloseTag;
const isComment = (text) => exports.COMMENT_REGEX.test(text.trim());
exports.isComment = isComment;
const isOpenCloseTag = (text) => exports.OPEN_CLOSE_TAG_REGEX.test(text.trim());
exports.isOpenCloseTag = isOpenCloseTag;
const isSelfClosingTag = (text) => exports.SELF_CLOSING_TAG_REGEX.test(text.trim());
exports.isSelfClosingTag = isSelfClosingTag;
//# sourceMappingURL=regexp.js.map