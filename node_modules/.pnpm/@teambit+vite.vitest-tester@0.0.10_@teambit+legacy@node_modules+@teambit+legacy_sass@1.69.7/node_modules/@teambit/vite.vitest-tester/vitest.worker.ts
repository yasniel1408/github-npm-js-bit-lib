import { expose } from '@teambit/worker';
import { UserConfig as ViteConfig } from 'vite';
import getVitest from '@teambit/vite.esm-packages.vitest';
import WatchReporter from './watch-reporter';

export class VitestWorker {
  private onTestCompleteCb: ((files: any, errors: any) => void) | undefined;

  onTestComplete(onTestComplete: ((files: any, errors: any) => void) | undefined) {
    this.onTestCompleteCb = onTestComplete;
  }

  async watch(viteConfig: ViteConfig): Promise<void> {
    const { startVitest } = await getVitest();
    // eslint-disable-next-line no-param-reassign
    viteConfig.test!.reporters = [
      new WatchReporter(
        async (files, errors) => {
          if (this.onTestCompleteCb) {
            this.onTestCompleteCb(files, errors)
          }
        }
      )
    ];
    await startVitest('test', undefined, undefined, viteConfig);
  }
}

expose(new VitestWorker());
