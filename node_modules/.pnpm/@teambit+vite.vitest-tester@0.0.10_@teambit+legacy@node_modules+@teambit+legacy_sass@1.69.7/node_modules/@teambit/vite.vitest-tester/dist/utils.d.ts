import { TesterContext, Tests } from '@teambit/tester';
import { DependencyResolverMain } from '@teambit/dependency-resolver';
import type { Vitest } from 'vitest/node';
import type { InlineConfig as ViteConfig } from 'vite';
import { VitestTesterOptions } from './vitest-options';
declare type ArrayElement<ArrayType extends readonly unknown[]> = ArrayType extends readonly (infer ElementType)[] ? ElementType : never;
export declare type VitestFile = ArrayElement<ReturnType<Vitest['state']['getFiles']>>;
export declare const patternsToArray: (opts: VitestTesterOptions, context: TesterContext) => string[];
export declare const getConfig: (configPath: string, context: TesterContext, depResolver: DependencyResolverMain, watch?: boolean) => Promise<ViteConfig>;
export declare const getResultFromFiles: (files: VitestFile[], errors: unknown[], opts: VitestTesterOptions, testerContext: TesterContext) => Tests;
export {};
