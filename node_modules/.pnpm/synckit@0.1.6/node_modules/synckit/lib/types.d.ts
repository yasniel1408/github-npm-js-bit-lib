export declare type AnyFn<T = any, R extends any[] = any[]> = (...args: R) => T;
export declare type AnyPromise = Promise<any>;
export declare type AnyAsyncFn = AnyFn<AnyPromise>;
export declare type Syncify<T extends AnyFn<AnyPromise>> = T extends (...args: infer Args) => Promise<infer R> ? (...args: Args) => R : never;
export declare type PromiseType<T extends AnyPromise> = T extends Promise<infer R> ? R : never;
