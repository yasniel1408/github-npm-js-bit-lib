{
  "__schema": "APISchema",
  "location": {
    "filePath": "index.ts",
    "line": 1,
    "character": 1
  },
  "module": {
    "__schema": "ModuleSchema",
    "location": {
      "filePath": "index.ts",
      "line": 1,
      "character": 1
    },
    "exports": [
      {
        "__schema": "ClassSchema",
        "location": {
          "filePath": "typescript-compiler.ts",
          "line": 23,
          "character": 1
        },
        "signature": "class TypescriptCompiler",
        "name": "TypescriptCompiler",
        "members": [
          {
            "__schema": "VariableLikeSchema",
            "location": {
              "filePath": "typescript-compiler.ts",
              "line": 24,
              "character": 3
            },
            "signature": "(property) TypescriptCompiler.distDir: string",
            "name": "distDir",
            "type": {
              "__schema": "KeywordTypeSchema",
              "location": {
                "filePath": "typescript-compiler.ts",
                "line": 24,
                "character": 12
              },
              "name": "string"
            },
            "isOptional": false
          },
          {
            "__schema": "VariableLikeSchema",
            "location": {
              "filePath": "typescript-compiler.ts",
              "line": 26,
              "character": 3
            },
            "signature": "(property) TypescriptCompiler.distGlobPatterns: string[]",
            "name": "distGlobPatterns",
            "type": {
              "__schema": "TypeArraySchema",
              "location": {
                "filePath": "typescript-compiler.ts",
                "line": 26,
                "character": 21
              },
              "type": {
                "__schema": "KeywordTypeSchema",
                "location": {
                  "filePath": "typescript-compiler.ts",
                  "line": 26,
                  "character": 21
                },
                "name": "string"
              }
            },
            "isOptional": false
          },
          {
            "__schema": "VariableLikeSchema",
            "location": {
              "filePath": "typescript-compiler.ts",
              "line": 28,
              "character": 3
            },
            "signature": "(property) TypescriptCompiler.shouldCopyNonSupportedFiles: boolean",
            "name": "shouldCopyNonSupportedFiles",
            "type": {
              "__schema": "KeywordTypeSchema",
              "location": {
                "filePath": "typescript-compiler.ts",
                "line": 28,
                "character": 32
              },
              "name": "boolean"
            },
            "isOptional": false
          },
          {
            "__schema": "VariableLikeSchema",
            "location": {
              "filePath": "typescript-compiler.ts",
              "line": 30,
              "character": 3
            },
            "signature": "(property) TypescriptCompiler.artifactName: string",
            "name": "artifactName",
            "type": {
              "__schema": "KeywordTypeSchema",
              "location": {
                "filePath": "typescript-compiler.ts",
                "line": 30,
                "character": 17
              },
              "name": "string"
            },
            "isOptional": false
          },
          {
            "__schema": "ConstructorSchema",
            "location": {
              "filePath": "typescript-compiler.ts",
              "line": 32,
              "character": 3
            },
            "signature": "constructor TypescriptCompiler(id: string, logger: Logger, options: TypeScriptCompilerOptions, rawTsConfig: Record<string, any>, tsModule: typeof typescript): TypescriptCompiler",
            "name": "constructor",
            "params": [
              {
                "__schema": "ParameterSchema",
                "location": {
                  "filePath": "typescript-compiler.ts",
                  "line": 33,
                  "character": 5
                },
                "name": "id",
                "type": {
                  "__schema": "KeywordTypeSchema",
                  "location": {
                    "filePath": "typescript-compiler.ts",
                    "line": 33,
                    "character": 18
                  },
                  "name": "string"
                },
                "isOptional": true,
                "defaultValue": "'typescript-compiler'",
                "isSpread": false
              },
              {
                "__schema": "ParameterSchema",
                "location": {
                  "filePath": "typescript-compiler.ts",
                  "line": 34,
                  "character": 5
                },
                "name": "logger",
                "type": {
                  "__schema": "TypeRefSchema",
                  "location": {
                    "filePath": "typescript-compiler.ts",
                    "line": 34,
                    "character": 21
                  },
                  "name": "Logger",
                  "componentId": {
                    "scope": "teambit.harmony",
                    "name": "logger"
                  }
                },
                "isOptional": false,
                "isSpread": false
              },
              {
                "__schema": "ParameterSchema",
                "location": {
                  "filePath": "typescript-compiler.ts",
                  "line": 35,
                  "character": 5
                },
                "name": "options",
                "type": {
                  "__schema": "TypeRefSchema",
                  "location": {
                    "filePath": "typescript-compiler.ts",
                    "line": 35,
                    "character": 22
                  },
                  "name": "TypeScriptCompilerOptions"
                },
                "isOptional": false,
                "isSpread": false
              },
              {
                "__schema": "ParameterSchema",
                "location": {
                  "filePath": "typescript-compiler.ts",
                  "line": 36,
                  "character": 5
                },
                "name": "rawTsConfig",
                "type": {
                  "__schema": "TypeRefSchema",
                  "location": {
                    "filePath": "typescript-compiler.ts",
                    "line": 36,
                    "character": 26
                  },
                  "name": "Record",
                  "typeArgs": [
                    {
                      "__schema": "KeywordTypeSchema",
                      "location": {
                        "filePath": "typescript-compiler.ts",
                        "line": 36,
                        "character": 33
                      },
                      "name": "string"
                    },
                    {
                      "__schema": "KeywordTypeSchema",
                      "location": {
                        "filePath": "typescript-compiler.ts",
                        "line": 36,
                        "character": 41
                      },
                      "name": "any"
                    }
                  ]
                },
                "isOptional": false,
                "isSpread": false
              },
              {
                "__schema": "ParameterSchema",
                "location": {
                  "filePath": "typescript-compiler.ts",
                  "line": 37,
                  "character": 5
                },
                "name": "tsModule",
                "type": {
                  "__schema": "TypeQuerySchema",
                  "location": {
                    "filePath": "typescript-compiler.ts",
                    "line": 37,
                    "character": 23
                  },
                  "signature": "(alias) namespace typescript\nimport typescript",
                  "type": {
                    "__schema": "TypeRefSchema",
                    "location": {
                      "filePath": "typescript-compiler.ts",
                      "line": 37,
                      "character": 30
                    },
                    "name": "typescript",
                    "packageName": "typescript"
                  }
                },
                "isOptional": false,
                "isSpread": false
              }
            ],
            "returnType": {
              "__schema": "ThisTypeSchema",
              "location": {
                "filePath": "typescript-compiler.ts",
                "line": 23,
                "character": 1
              },
              "name": "TypescriptCompiler"
            },
            "modifiers": []
          },
          {
            "__schema": "VariableLikeSchema",
            "location": {
              "filePath": "typescript-compiler.ts",
              "line": 59,
              "character": 3
            },
            "signature": "(property) TypescriptCompiler.displayName: string",
            "name": "displayName",
            "type": {
              "__schema": "InferenceTypeSchema",
              "location": {
                "filePath": "typescript-compiler.ts",
                "line": 59,
                "character": 3
              },
              "type": "string"
            },
            "isOptional": true,
            "defaultValue": "'TypeScript'"
          },
          {
            "__schema": "VariableLikeSchema",
            "location": {
              "filePath": "typescript-compiler.ts",
              "line": 61,
              "character": 3
            },
            "signature": "(property) TypescriptCompiler.deleteDistDir: boolean",
            "name": "deleteDistDir",
            "type": {
              "__schema": "InferenceTypeSchema",
              "location": {
                "filePath": "typescript-compiler.ts",
                "line": 61,
                "character": 3
              },
              "type": "boolean"
            },
            "isOptional": true,
            "defaultValue": "false"
          },
          {
            "__schema": "GetAccessorSchema",
            "location": {
              "filePath": "typescript-compiler.ts",
              "line": 67,
              "character": 3
            },
            "signature": "(getter) TypescriptCompiler.tsconfig: Record<string, any>",
            "name": "tsconfig",
            "type": {
              "__schema": "InferenceTypeSchema",
              "location": {
                "filePath": "typescript-compiler.ts",
                "line": 67,
                "character": 3
              },
              "type": "Record<string, any>"
            }
          },
          {
            "__schema": "FunctionLikeSchema",
            "location": {
              "filePath": "typescript-compiler.ts",
              "line": 71,
              "character": 3
            },
            "signature": "(method) TypescriptCompiler.displayConfig(): string",
            "name": "displayConfig",
            "params": [],
            "returnType": {
              "__schema": "InferenceTypeSchema",
              "location": {
                "filePath": "typescript-compiler.ts",
                "line": 71,
                "character": 3
              },
              "type": "string"
            },
            "modifiers": []
          },
          {
            "__schema": "FunctionLikeSchema",
            "location": {
              "filePath": "typescript-compiler.ts",
              "line": 75,
              "character": 3
            },
            "signature": "(method) TypescriptCompiler.getDistDir(): string",
            "name": "getDistDir",
            "params": [],
            "returnType": {
              "__schema": "InferenceTypeSchema",
              "location": {
                "filePath": "typescript-compiler.ts",
                "line": 75,
                "character": 3
              },
              "type": "string"
            },
            "modifiers": []
          },
          {
            "__schema": "FunctionLikeSchema",
            "location": {
              "filePath": "typescript-compiler.ts",
              "line": 82,
              "character": 3
            },
            "doc": {
              "__schema": "DocSchema",
              "location": {
                "filePath": "typescript-compiler.ts",
                "line": 79,
                "character": 3
              },
              "raw": "/**\n   * compile one file on the workspace\n   */",
              "comment": "compile one file on the workspace"
            },
            "signature": "(method) TypescriptCompiler.transpileFile(fileContent: string, options: TranspileFileParams): TranspileFileOutputOneFile[]",
            "name": "transpileFile",
            "params": [
              {
                "__schema": "ParameterSchema",
                "location": {
                  "filePath": "typescript-compiler.ts",
                  "line": 83,
                  "character": 5
                },
                "name": "fileContent",
                "type": {
                  "__schema": "KeywordTypeSchema",
                  "location": {
                    "filePath": "typescript-compiler.ts",
                    "line": 83,
                    "character": 18
                  },
                  "name": "string"
                },
                "isOptional": false,
                "isSpread": false
              },
              {
                "__schema": "ParameterSchema",
                "location": {
                  "filePath": "typescript-compiler.ts",
                  "line": 84,
                  "character": 5
                },
                "name": "options",
                "type": {
                  "__schema": "TypeRefSchema",
                  "location": {
                    "filePath": "typescript-compiler.ts",
                    "line": 84,
                    "character": 14
                  },
                  "name": "TranspileFileParams",
                  "componentId": {
                    "scope": "teambit.compilation",
                    "name": "compiler"
                  }
                },
                "isOptional": false,
                "isSpread": false
              }
            ],
            "returnType": {
              "__schema": "TypeRefSchema",
              "location": {
                "filePath": "typescript-compiler.ts",
                "line": 85,
                "character": 6
              },
              "name": "TranspileFileOutput",
              "componentId": {
                "scope": "teambit.compilation",
                "name": "compiler"
              }
            },
            "modifiers": []
          },
          {
            "__schema": "FunctionLikeSchema",
            "location": {
              "filePath": "typescript-compiler.ts",
              "line": 138,
              "character": 3
            },
            "signature": "(method) TypescriptCompiler.preBuild(context: BuildContext): Promise<void>",
            "name": "preBuild",
            "params": [
              {
                "__schema": "ParameterSchema",
                "location": {
                  "filePath": "typescript-compiler.ts",
                  "line": 138,
                  "character": 18
                },
                "name": "context",
                "type": {
                  "__schema": "TypeRefSchema",
                  "location": {
                    "filePath": "typescript-compiler.ts",
                    "line": 138,
                    "character": 27
                  },
                  "name": "BuildContext",
                  "componentId": {
                    "scope": "teambit.pipelines",
                    "name": "builder"
                  }
                },
                "isOptional": false,
                "isSpread": false
              }
            ],
            "returnType": {
              "__schema": "InferenceTypeSchema",
              "location": {
                "filePath": "typescript-compiler.ts",
                "line": 138,
                "character": 3
              },
              "type": "Promise<void>"
            },
            "modifiers": [
              "async"
            ]
          },
          {
            "__schema": "FunctionLikeSchema",
            "location": {
              "filePath": "typescript-compiler.ts",
              "line": 149,
              "character": 3
            },
            "doc": {
              "__schema": "DocSchema",
              "location": {
                "filePath": "typescript-compiler.ts",
                "line": 146,
                "character": 3
              },
              "raw": "/**\n   * compile multiple components on the capsules\n   */",
              "comment": "compile multiple components on the capsules"
            },
            "signature": "(method) TypescriptCompiler.build(context: BuildContext): Promise<BuiltTaskResult>",
            "name": "build",
            "params": [
              {
                "__schema": "ParameterSchema",
                "location": {
                  "filePath": "typescript-compiler.ts",
                  "line": 149,
                  "character": 15
                },
                "name": "context",
                "type": {
                  "__schema": "TypeRefSchema",
                  "location": {
                    "filePath": "typescript-compiler.ts",
                    "line": 149,
                    "character": 24
                  },
                  "name": "BuildContext",
                  "componentId": {
                    "scope": "teambit.pipelines",
                    "name": "builder"
                  }
                },
                "isOptional": false,
                "isSpread": false
              }
            ],
            "returnType": {
              "__schema": "TypeRefSchema",
              "location": {
                "filePath": "typescript-compiler.ts",
                "line": 149,
                "character": 39
              },
              "name": "Promise",
              "typeArgs": [
                {
                  "__schema": "TypeRefSchema",
                  "location": {
                    "filePath": "typescript-compiler.ts",
                    "line": 149,
                    "character": 47
                  },
                  "name": "BuiltTaskResult",
                  "componentId": {
                    "scope": "teambit.pipelines",
                    "name": "builder"
                  }
                }
              ]
            },
            "modifiers": [
              "async"
            ]
          },
          {
            "__schema": "FunctionLikeSchema",
            "location": {
              "filePath": "typescript-compiler.ts",
              "line": 158,
              "character": 3
            },
            "signature": "(method) TypescriptCompiler.postBuild(context: BuildContext): Promise<void>",
            "name": "postBuild",
            "params": [
              {
                "__schema": "ParameterSchema",
                "location": {
                  "filePath": "typescript-compiler.ts",
                  "line": 158,
                  "character": 19
                },
                "name": "context",
                "type": {
                  "__schema": "TypeRefSchema",
                  "location": {
                    "filePath": "typescript-compiler.ts",
                    "line": 158,
                    "character": 28
                  },
                  "name": "BuildContext",
                  "componentId": {
                    "scope": "teambit.pipelines",
                    "name": "builder"
                  }
                },
                "isOptional": false,
                "isSpread": false
              }
            ],
            "returnType": {
              "__schema": "InferenceTypeSchema",
              "location": {
                "filePath": "typescript-compiler.ts",
                "line": 158,
                "character": 3
              },
              "type": "Promise<void>"
            },
            "modifiers": [
              "async"
            ]
          },
          {
            "__schema": "FunctionLikeSchema",
            "location": {
              "filePath": "typescript-compiler.ts",
              "line": 172,
              "character": 3
            },
            "signature": "(method) TypescriptCompiler.getArtifactDefinition(): {\n    generatedBy: string;\n    name: string;\n    globPatterns: string[];\n}[]",
            "name": "getArtifactDefinition",
            "params": [],
            "returnType": {
              "__schema": "InferenceTypeSchema",
              "location": {
                "filePath": "typescript-compiler.ts",
                "line": 172,
                "character": 3
              },
              "type": "{\n    generatedBy: string;\n    name: string;\n    globPatterns: string[];\n}[]"
            },
            "modifiers": []
          },
          {
            "__schema": "FunctionLikeSchema",
            "location": {
              "filePath": "typescript-compiler.ts",
              "line": 185,
              "character": 3
            },
            "doc": {
              "__schema": "DocSchema",
              "location": {
                "filePath": "typescript-compiler.ts",
                "line": 182,
                "character": 3
              },
              "raw": "/**\n   * given a source file, return its parallel in the dists. e.g. index.ts => dist/index.js\n   */",
              "comment": "given a source file, return its parallel in the dists. e.g. index.ts => dist/index.js"
            },
            "signature": "(method) TypescriptCompiler.getDistPathBySrcPath(srcPath: string): string",
            "name": "getDistPathBySrcPath",
            "params": [
              {
                "__schema": "ParameterSchema",
                "location": {
                  "filePath": "typescript-compiler.ts",
                  "line": 185,
                  "character": 24
                },
                "name": "srcPath",
                "type": {
                  "__schema": "KeywordTypeSchema",
                  "location": {
                    "filePath": "typescript-compiler.ts",
                    "line": 185,
                    "character": 33
                  },
                  "name": "string"
                },
                "isOptional": false,
                "isSpread": false
              }
            ],
            "returnType": {
              "__schema": "InferenceTypeSchema",
              "location": {
                "filePath": "typescript-compiler.ts",
                "line": 185,
                "character": 3
              },
              "type": "string"
            },
            "modifiers": []
          },
          {
            "__schema": "FunctionLikeSchema",
            "location": {
              "filePath": "typescript-compiler.ts",
              "line": 193,
              "character": 3
            },
            "doc": {
              "__schema": "DocSchema",
              "location": {
                "filePath": "typescript-compiler.ts",
                "line": 190,
                "character": 3
              },
              "raw": "/**\n   * whether typescript is able to compile the given path\n   */",
              "comment": "whether typescript is able to compile the given path"
            },
            "signature": "(method) TypescriptCompiler.isFileSupported(filePath: string): boolean",
            "name": "isFileSupported",
            "params": [
              {
                "__schema": "ParameterSchema",
                "location": {
                  "filePath": "typescript-compiler.ts",
                  "line": 193,
                  "character": 19
                },
                "name": "filePath",
                "type": {
                  "__schema": "KeywordTypeSchema",
                  "location": {
                    "filePath": "typescript-compiler.ts",
                    "line": 193,
                    "character": 29
                  },
                  "name": "string"
                },
                "isOptional": false,
                "isSpread": false
              }
            ],
            "returnType": {
              "__schema": "KeywordTypeSchema",
              "location": {
                "filePath": "typescript-compiler.ts",
                "line": 193,
                "character": 38
              },
              "name": "boolean"
            },
            "modifiers": []
          },
          {
            "__schema": "FunctionLikeSchema",
            "location": {
              "filePath": "typescript-compiler.ts",
              "line": 387,
              "character": 3
            },
            "signature": "(method) TypescriptCompiler.version(): string",
            "name": "version",
            "params": [],
            "returnType": {
              "__schema": "InferenceTypeSchema",
              "location": {
                "filePath": "typescript-compiler.ts",
                "line": 387,
                "character": 3
              },
              "type": "string"
            },
            "modifiers": []
          },
          {
            "__schema": "FunctionLikeSchema",
            "location": {
              "filePath": "typescript-compiler.ts",
              "line": 391,
              "character": 3
            },
            "signature": "(method) TypescriptCompiler.from(options: TypeScriptCompilerOptions): EnvHandler<Compiler>",
            "name": "from",
            "params": [
              {
                "__schema": "ParameterSchema",
                "location": {
                  "filePath": "typescript-compiler.ts",
                  "line": 391,
                  "character": 15
                },
                "name": "options",
                "type": {
                  "__schema": "TypeRefSchema",
                  "location": {
                    "filePath": "typescript-compiler.ts",
                    "line": 391,
                    "character": 24
                  },
                  "name": "TypeScriptCompilerOptions"
                },
                "isOptional": false,
                "isSpread": false
              }
            ],
            "returnType": {
              "__schema": "TypeRefSchema",
              "location": {
                "filePath": "typescript-compiler.ts",
                "line": 391,
                "character": 52
              },
              "name": "EnvHandler",
              "componentId": {
                "scope": "teambit.envs",
                "name": "envs"
              },
              "typeArgs": [
                {
                  "__schema": "TypeRefSchema",
                  "location": {
                    "filePath": "typescript-compiler.ts",
                    "line": 391,
                    "character": 63
                  },
                  "name": "Compiler",
                  "componentId": {
                    "scope": "teambit.compilation",
                    "name": "compiler"
                  }
                }
              ]
            },
            "modifiers": [
              "static"
            ]
          }
        ],
        "extendsNodes": [],
        "implementNodes": [
          {
            "__schema": "ExpressionWithTypeArgumentsSchema",
            "location": {
              "filePath": "typescript-compiler.ts",
              "line": 23,
              "character": 44
            },
            "name": "implements Compiler",
            "typeArgs": [],
            "expression": {
              "__schema": "TypeRefSchema",
              "location": {
                "filePath": "typescript-compiler.ts",
                "line": 23,
                "character": 44
              },
              "name": "Compiler",
              "packageName": "/tmp/capsules-root/sign-capsules/2023-11-13/18a28q6/teambit.typescript_typescript-compiler@6bf1dcfc0d8db8b051259d21706946b4d2f9feca/typescript-compiler.ts"
            }
          }
        ]
      },
      {
        "__schema": "VariableLikeSchema",
        "location": {
          "filePath": "typescript-task.ts",
          "line": 12,
          "character": 14
        },
        "signature": "const TypescriptTask: {\n    from: (options: TypeScriptTaskOptions) => TaskHandler;\n}",
        "name": "TypescriptTask",
        "type": {
          "__schema": "InferenceTypeSchema",
          "location": {
            "filePath": "typescript-task.ts",
            "line": 12,
            "character": 14
          },
          "type": "{\n    from: (options: TypeScriptTaskOptions) => TaskHandler;\n}"
        },
        "isOptional": false,
        "defaultValue": "{\n  from: (options: TypeScriptTaskOptions): TaskHandler => {\n    const name = options.name || 'TypescriptCompile';\n    const description =\n      options.description || 'compiling components using Typescript';\n\n    return CompilerTask.from({\n      name,\n      description,\n      compiler: TypescriptCompiler.from(options),\n    });\n  },\n}"
      },
      {
        "__schema": "ClassSchema",
        "location": {
          "filePath": "ts-config-writer.ts",
          "line": 34,
          "character": 1
        },
        "signature": "class TypescriptConfigWriter",
        "name": "TypescriptConfigWriter",
        "members": [
          {
            "__schema": "VariableLikeSchema",
            "location": {
              "filePath": "ts-config-writer.ts",
              "line": 35,
              "character": 3
            },
            "signature": "(property) TypescriptConfigWriter.id: string",
            "name": "id",
            "type": {
              "__schema": "InferenceTypeSchema",
              "location": {
                "filePath": "ts-config-writer.ts",
                "line": 35,
                "character": 3
              },
              "type": "string"
            },
            "isOptional": true,
            "defaultValue": "'typescript'"
          },
          {
            "__schema": "VariableLikeSchema",
            "location": {
              "filePath": "ts-config-writer.ts",
              "line": 37,
              "character": 3
            },
            "signature": "(property) TypescriptConfigWriter.patterns: string[]",
            "name": "patterns",
            "type": {
              "__schema": "TypeArraySchema",
              "location": {
                "filePath": "ts-config-writer.ts",
                "line": 37,
                "character": 13
              },
              "type": {
                "__schema": "KeywordTypeSchema",
                "location": {
                  "filePath": "ts-config-writer.ts",
                  "line": 37,
                  "character": 13
                },
                "name": "string"
              }
            },
            "isOptional": true,
            "defaultValue": "[`**/${CONFIG_NAME}`]"
          },
          {
            "__schema": "ConstructorSchema",
            "location": {
              "filePath": "ts-config-writer.ts",
              "line": 39,
              "character": 3
            },
            "signature": "constructor TypescriptConfigWriter(name: string, tsconfig: Record<string, any>, typesPaths: string[], logger: Logger): TypescriptConfigWriter",
            "name": "constructor",
            "params": [
              {
                "__schema": "ParameterSchema",
                "location": {
                  "filePath": "ts-config-writer.ts",
                  "line": 40,
                  "character": 5
                },
                "name": "name",
                "type": {
                  "__schema": "KeywordTypeSchema",
                  "location": {
                    "filePath": "ts-config-writer.ts",
                    "line": 40,
                    "character": 20
                  },
                  "name": "string"
                },
                "isOptional": false,
                "isSpread": false
              },
              {
                "__schema": "ParameterSchema",
                "location": {
                  "filePath": "ts-config-writer.ts",
                  "line": 41,
                  "character": 5
                },
                "name": "tsconfig",
                "type": {
                  "__schema": "TypeRefSchema",
                  "location": {
                    "filePath": "ts-config-writer.ts",
                    "line": 41,
                    "character": 23
                  },
                  "name": "Record",
                  "typeArgs": [
                    {
                      "__schema": "KeywordTypeSchema",
                      "location": {
                        "filePath": "ts-config-writer.ts",
                        "line": 41,
                        "character": 30
                      },
                      "name": "string"
                    },
                    {
                      "__schema": "KeywordTypeSchema",
                      "location": {
                        "filePath": "ts-config-writer.ts",
                        "line": 41,
                        "character": 38
                      },
                      "name": "any"
                    }
                  ]
                },
                "isOptional": false,
                "isSpread": false
              },
              {
                "__schema": "ParameterSchema",
                "location": {
                  "filePath": "ts-config-writer.ts",
                  "line": 42,
                  "character": 5
                },
                "name": "typesPaths",
                "type": {
                  "__schema": "TypeArraySchema",
                  "location": {
                    "filePath": "ts-config-writer.ts",
                    "line": 42,
                    "character": 25
                  },
                  "type": {
                    "__schema": "KeywordTypeSchema",
                    "location": {
                      "filePath": "ts-config-writer.ts",
                      "line": 42,
                      "character": 25
                    },
                    "name": "string"
                  }
                },
                "isOptional": true,
                "defaultValue": "[]",
                "isSpread": false
              },
              {
                "__schema": "ParameterSchema",
                "location": {
                  "filePath": "ts-config-writer.ts",
                  "line": 43,
                  "character": 5
                },
                "name": "logger",
                "type": {
                  "__schema": "TypeRefSchema",
                  "location": {
                    "filePath": "ts-config-writer.ts",
                    "line": 43,
                    "character": 21
                  },
                  "name": "Logger",
                  "componentId": {
                    "scope": "teambit.harmony",
                    "name": "logger"
                  }
                },
                "isOptional": false,
                "isSpread": false
              }
            ],
            "returnType": {
              "__schema": "ThisTypeSchema",
              "location": {
                "filePath": "ts-config-writer.ts",
                "line": 34,
                "character": 1
              },
              "name": "TypescriptConfigWriter"
            },
            "modifiers": []
          },
          {
            "__schema": "FunctionLikeSchema",
            "location": {
              "filePath": "ts-config-writer.ts",
              "line": 46,
              "character": 3
            },
            "signature": "(method) TypescriptConfigWriter.calcConfigFiles(_executionContext: ExecutionContext, envMapValue: EnvMapValue, configsRootDir: string): ConfigFile[] | undefined",
            "name": "calcConfigFiles",
            "params": [
              {
                "__schema": "ParameterSchema",
                "location": {
                  "filePath": "ts-config-writer.ts",
                  "line": 47,
                  "character": 5
                },
                "name": "_executionContext",
                "type": {
                  "__schema": "TypeRefSchema",
                  "location": {
                    "filePath": "ts-config-writer.ts",
                    "line": 47,
                    "character": 24
                  },
                  "name": "ExecutionContext",
                  "componentId": {
                    "scope": "teambit.envs",
                    "name": "envs"
                  }
                },
                "isOptional": false,
                "isSpread": false
              },
              {
                "__schema": "ParameterSchema",
                "location": {
                  "filePath": "ts-config-writer.ts",
                  "line": 48,
                  "character": 5
                },
                "name": "envMapValue",
                "type": {
                  "__schema": "TypeRefSchema",
                  "location": {
                    "filePath": "ts-config-writer.ts",
                    "line": 48,
                    "character": 18
                  },
                  "name": "EnvMapValue",
                  "componentId": {
                    "scope": "teambit.workspace",
                    "name": "workspace-config-files"
                  }
                },
                "isOptional": false,
                "isSpread": false
              },
              {
                "__schema": "ParameterSchema",
                "location": {
                  "filePath": "ts-config-writer.ts",
                  "line": 49,
                  "character": 5
                },
                "name": "configsRootDir",
                "type": {
                  "__schema": "KeywordTypeSchema",
                  "location": {
                    "filePath": "ts-config-writer.ts",
                    "line": 49,
                    "character": 21
                  },
                  "name": "string"
                },
                "isOptional": false,
                "isSpread": false
              }
            ],
            "returnType": {
              "__schema": "TypeUnionSchema",
              "location": {
                "filePath": "ts-config-writer.ts",
                "line": 50,
                "character": 6
              },
              "types": [
                {
                  "__schema": "TypeArraySchema",
                  "location": {
                    "filePath": "ts-config-writer.ts",
                    "line": 50,
                    "character": 6
                  },
                  "type": {
                    "__schema": "TypeRefSchema",
                    "location": {
                      "filePath": "ts-config-writer.ts",
                      "line": 50,
                      "character": 6
                    },
                    "name": "ConfigFile",
                    "componentId": {
                      "scope": "teambit.workspace",
                      "name": "workspace-config-files"
                    }
                  }
                },
                {
                  "__schema": "KeywordTypeSchema",
                  "location": {
                    "filePath": "ts-config-writer.ts",
                    "line": 50,
                    "character": 21
                  },
                  "name": "undefined"
                }
              ]
            },
            "modifiers": []
          },
          {
            "__schema": "FunctionLikeSchema",
            "location": {
              "filePath": "ts-config-writer.ts",
              "line": 87,
              "character": 3
            },
            "signature": "(method) TypescriptConfigWriter.mergeConfigFiles?(configFile: ConfigFile, configFile2: ConfigFile): string",
            "name": "mergeConfigFiles",
            "params": [
              {
                "__schema": "ParameterSchema",
                "location": {
                  "filePath": "ts-config-writer.ts",
                  "line": 87,
                  "character": 21
                },
                "name": "configFile",
                "type": {
                  "__schema": "TypeRefSchema",
                  "location": {
                    "filePath": "ts-config-writer.ts",
                    "line": 87,
                    "character": 33
                  },
                  "name": "ConfigFile",
                  "componentId": {
                    "scope": "teambit.workspace",
                    "name": "workspace-config-files"
                  }
                },
                "isOptional": false,
                "isSpread": false
              },
              {
                "__schema": "ParameterSchema",
                "location": {
                  "filePath": "ts-config-writer.ts",
                  "line": 87,
                  "character": 45
                },
                "name": "configFile2",
                "type": {
                  "__schema": "TypeRefSchema",
                  "location": {
                    "filePath": "ts-config-writer.ts",
                    "line": 87,
                    "character": 58
                  },
                  "name": "ConfigFile",
                  "componentId": {
                    "scope": "teambit.workspace",
                    "name": "workspace-config-files"
                  }
                },
                "isOptional": false,
                "isSpread": false
              }
            ],
            "returnType": {
              "__schema": "KeywordTypeSchema",
              "location": {
                "filePath": "ts-config-writer.ts",
                "line": 87,
                "character": 71
              },
              "name": "string"
            },
            "modifiers": []
          },
          {
            "__schema": "FunctionLikeSchema",
            "location": {
              "filePath": "ts-config-writer.ts",
              "line": 102,
              "character": 3
            },
            "signature": "(method) TypescriptConfigWriter.generateExtendingFile(args: GenerateExtendingConfigFilesArgs): ExtendingConfigFile | undefined",
            "name": "generateExtendingFile",
            "params": [
              {
                "__schema": "ParameterSchema",
                "location": {
                  "filePath": "ts-config-writer.ts",
                  "line": 102,
                  "character": 25
                },
                "name": "args",
                "type": {
                  "__schema": "TypeRefSchema",
                  "location": {
                    "filePath": "ts-config-writer.ts",
                    "line": 102,
                    "character": 31
                  },
                  "name": "GenerateExtendingConfigFilesArgs",
                  "componentId": {
                    "scope": "teambit.workspace",
                    "name": "workspace-config-files"
                  }
                },
                "isOptional": false,
                "isSpread": false
              }
            ],
            "returnType": {
              "__schema": "TypeUnionSchema",
              "location": {
                "filePath": "ts-config-writer.ts",
                "line": 102,
                "character": 66
              },
              "types": [
                {
                  "__schema": "TypeRefSchema",
                  "location": {
                    "filePath": "ts-config-writer.ts",
                    "line": 102,
                    "character": 66
                  },
                  "name": "ExtendingConfigFile",
                  "componentId": {
                    "scope": "teambit.workspace",
                    "name": "workspace-config-files"
                  }
                },
                {
                  "__schema": "KeywordTypeSchema",
                  "location": {
                    "filePath": "ts-config-writer.ts",
                    "line": 102,
                    "character": 88
                  },
                  "name": "undefined"
                }
              ]
            },
            "modifiers": []
          },
          {
            "__schema": "FunctionLikeSchema",
            "location": {
              "filePath": "ts-config-writer.ts",
              "line": 114,
              "character": 3
            },
            "signature": "(method) TypescriptConfigWriter.postProcessExtendingConfigFiles?(args: PostProcessExtendingConfigFilesArgs): Promise<string | undefined>",
            "name": "postProcessExtendingConfigFiles",
            "params": [
              {
                "__schema": "ParameterSchema",
                "location": {
                  "filePath": "ts-config-writer.ts",
                  "line": 114,
                  "character": 42
                },
                "name": "args",
                "type": {
                  "__schema": "TypeRefSchema",
                  "location": {
                    "filePath": "ts-config-writer.ts",
                    "line": 114,
                    "character": 48
                  },
                  "name": "PostProcessExtendingConfigFilesArgs",
                  "componentId": {
                    "scope": "teambit.workspace",
                    "name": "workspace-config-files"
                  }
                },
                "isOptional": false,
                "isSpread": false
              }
            ],
            "returnType": {
              "__schema": "TypeRefSchema",
              "location": {
                "filePath": "ts-config-writer.ts",
                "line": 114,
                "character": 86
              },
              "name": "Promise",
              "typeArgs": [
                {
                  "__schema": "TypeUnionSchema",
                  "location": {
                    "filePath": "ts-config-writer.ts",
                    "line": 114,
                    "character": 94
                  },
                  "types": [
                    {
                      "__schema": "KeywordTypeSchema",
                      "location": {
                        "filePath": "ts-config-writer.ts",
                        "line": 114,
                        "character": 94
                      },
                      "name": "string"
                    },
                    {
                      "__schema": "KeywordTypeSchema",
                      "location": {
                        "filePath": "ts-config-writer.ts",
                        "line": 114,
                        "character": 103
                      },
                      "name": "undefined"
                    }
                  ]
                }
              ]
            },
            "modifiers": [
              "async"
            ]
          },
          {
            "__schema": "FunctionLikeSchema",
            "location": {
              "filePath": "ts-config-writer.ts",
              "line": 144,
              "character": 3
            },
            "signature": "(method) TypescriptConfigWriter.isBitGenerated(filePath: string): boolean",
            "name": "isBitGenerated",
            "params": [
              {
                "__schema": "ParameterSchema",
                "location": {
                  "filePath": "ts-config-writer.ts",
                  "line": 144,
                  "character": 18
                },
                "name": "filePath",
                "type": {
                  "__schema": "KeywordTypeSchema",
                  "location": {
                    "filePath": "ts-config-writer.ts",
                    "line": 144,
                    "character": 28
                  },
                  "name": "string"
                },
                "isOptional": false,
                "isSpread": false
              }
            ],
            "returnType": {
              "__schema": "KeywordTypeSchema",
              "location": {
                "filePath": "ts-config-writer.ts",
                "line": 144,
                "character": 37
              },
              "name": "boolean"
            },
            "modifiers": []
          },
          {
            "__schema": "FunctionLikeSchema",
            "location": {
              "filePath": "ts-config-writer.ts",
              "line": 149,
              "character": 3
            },
            "signature": "(method) TypescriptConfigWriter.from(options: TypescriptConfigWriterOptions): ConfigWriterHandler",
            "name": "from",
            "params": [
              {
                "__schema": "ParameterSchema",
                "location": {
                  "filePath": "ts-config-writer.ts",
                  "line": 149,
                  "character": 15
                },
                "name": "options",
                "type": {
                  "__schema": "TypeRefSchema",
                  "location": {
                    "filePath": "ts-config-writer.ts",
                    "line": 149,
                    "character": 24
                  },
                  "name": "TypescriptConfigWriterOptions",
                  "internalFilePath": "ts-config-writer.ts"
                },
                "isOptional": false,
                "isSpread": false
              }
            ],
            "returnType": {
              "__schema": "TypeRefSchema",
              "location": {
                "filePath": "ts-config-writer.ts",
                "line": 149,
                "character": 3
              },
              "name": "ConfigWriterHandler",
              "componentId": {
                "scope": "teambit.workspace",
                "name": "workspace-config-files"
              }
            },
            "modifiers": [
              "static"
            ]
          },
          {
            "__schema": "FunctionLikeSchema",
            "location": {
              "filePath": "ts-config-writer.ts",
              "line": 160,
              "character": 3
            },
            "signature": "(method) TypescriptConfigWriter.create(options: TypescriptConfigWriterOptions, logger: Logger): TypescriptConfigWriter",
            "name": "create",
            "params": [
              {
                "__schema": "ParameterSchema",
                "location": {
                  "filePath": "ts-config-writer.ts",
                  "line": 160,
                  "character": 17
                },
                "name": "options",
                "type": {
                  "__schema": "TypeRefSchema",
                  "location": {
                    "filePath": "ts-config-writer.ts",
                    "line": 160,
                    "character": 26
                  },
                  "name": "TypescriptConfigWriterOptions",
                  "internalFilePath": "ts-config-writer.ts"
                },
                "isOptional": false,
                "isSpread": false
              },
              {
                "__schema": "ParameterSchema",
                "location": {
                  "filePath": "ts-config-writer.ts",
                  "line": 160,
                  "character": 57
                },
                "name": "logger",
                "type": {
                  "__schema": "TypeRefSchema",
                  "location": {
                    "filePath": "ts-config-writer.ts",
                    "line": 160,
                    "character": 65
                  },
                  "name": "Logger",
                  "componentId": {
                    "scope": "teambit.harmony",
                    "name": "logger"
                  }
                },
                "isOptional": false,
                "isSpread": false
              }
            ],
            "returnType": {
              "__schema": "TypeRefSchema",
              "location": {
                "filePath": "ts-config-writer.ts",
                "line": 160,
                "character": 3
              },
              "name": "TypescriptConfigWriter"
            },
            "modifiers": [
              "static"
            ]
          }
        ],
        "extendsNodes": [],
        "implementNodes": [
          {
            "__schema": "ExpressionWithTypeArgumentsSchema",
            "location": {
              "filePath": "ts-config-writer.ts",
              "line": 34,
              "character": 48
            },
            "name": "implements ConfigWriterEntry",
            "typeArgs": [],
            "expression": {
              "__schema": "TypeRefSchema",
              "location": {
                "filePath": "ts-config-writer.ts",
                "line": 34,
                "character": 48
              },
              "name": "ConfigWriterEntry",
              "packageName": "/tmp/capsules-root/sign-capsules/2023-11-13/18a28q6/teambit.typescript_typescript-compiler@6bf1dcfc0d8db8b051259d21706946b4d2f9feca/ts-config-writer.ts"
            }
          }
        ]
      },
      {
        "__schema": "VariableLikeSchema",
        "location": {
          "filePath": "ts-config-writer.ts",
          "line": 25,
          "character": 14
        },
        "signature": "const GLOBAL_TYPES_DIR: \"global-types\"",
        "name": "GLOBAL_TYPES_DIR",
        "type": {
          "__schema": "InferenceTypeSchema",
          "location": {
            "filePath": "ts-config-writer.ts",
            "line": 25,
            "character": 14
          },
          "type": "\"global-types\""
        },
        "isOptional": false,
        "defaultValue": "'global-types'"
      },
      {
        "__schema": "TypeSchema",
        "location": {
          "filePath": "typescript-compiler-options.ts",
          "line": 5,
          "character": 1
        },
        "signature": "type TypeScriptCompilerOptions = {\n    tsconfig?: string;\n    compilerOptions?: TsCompilerOptions;\n    types?: string[];\n    compileJs?: boolean;\n    compileJsx?: boolean;\n    esm?: boolean;\n    typescript?: any;\n    transformers?: TsConfigTransformer[];\n    typescriptTransformers?: CustomTransformers;\n} & Partial<CompilerOptions>",
        "name": "TypeScriptCompilerOptions",
        "type": {
          "__schema": "TypeIntersectionSchema",
          "location": {
            "filePath": "typescript-compiler-options.ts",
            "line": 5,
            "character": 41
          },
          "types": [
            {
              "__schema": "TypeLiteralSchema",
              "location": {
                "filePath": "typescript-compiler-options.ts",
                "line": 5,
                "character": 41
              },
              "members": [
                {
                  "__schema": "VariableLikeSchema",
                  "location": {
                    "filePath": "typescript-compiler-options.ts",
                    "line": 9,
                    "character": 3
                  },
                  "doc": {
                    "__schema": "DocSchema",
                    "location": {
                      "filePath": "typescript-compiler-options.ts",
                      "line": 6,
                      "character": 3
                    },
                    "raw": "/**\n   * path to tsconfig to use during compilation.\n   */",
                    "comment": "path to tsconfig to use during compilation."
                  },
                  "signature": "(property) tsconfig?: string",
                  "name": "tsconfig",
                  "type": {
                    "__schema": "KeywordTypeSchema",
                    "location": {
                      "filePath": "typescript-compiler-options.ts",
                      "line": 9,
                      "character": 14
                    },
                    "name": "string"
                  },
                  "isOptional": true
                },
                {
                  "__schema": "VariableLikeSchema",
                  "location": {
                    "filePath": "typescript-compiler-options.ts",
                    "line": 14,
                    "character": 3
                  },
                  "doc": {
                    "__schema": "DocSchema",
                    "location": {
                      "filePath": "typescript-compiler-options.ts",
                      "line": 11,
                      "character": 3
                    },
                    "raw": "/**\n   * a compiler options object.\n   */",
                    "comment": "a compiler options object."
                  },
                  "signature": "(property) compilerOptions?: TsCompilerOptions",
                  "name": "compilerOptions",
                  "type": {
                    "__schema": "TypeRefSchema",
                    "location": {
                      "filePath": "typescript-compiler-options.ts",
                      "line": 14,
                      "character": 21
                    },
                    "name": "TsCompilerOptions"
                  },
                  "isOptional": true
                },
                {
                  "__schema": "VariableLikeSchema",
                  "location": {
                    "filePath": "typescript-compiler-options.ts",
                    "line": 19,
                    "character": 3
                  },
                  "doc": {
                    "__schema": "DocSchema",
                    "location": {
                      "filePath": "typescript-compiler-options.ts",
                      "line": 16,
                      "character": 3
                    },
                    "raw": "/**\n   * path for .d.ts files to include during build.\n   */",
                    "comment": "path for .d.ts files to include during build."
                  },
                  "signature": "(property) types?: string[]",
                  "name": "types",
                  "type": {
                    "__schema": "TypeArraySchema",
                    "location": {
                      "filePath": "typescript-compiler-options.ts",
                      "line": 19,
                      "character": 11
                    },
                    "type": {
                      "__schema": "KeywordTypeSchema",
                      "location": {
                        "filePath": "typescript-compiler-options.ts",
                        "line": 19,
                        "character": 11
                      },
                      "name": "string"
                    }
                  },
                  "isOptional": true
                },
                {
                  "__schema": "VariableLikeSchema",
                  "location": {
                    "filePath": "typescript-compiler-options.ts",
                    "line": 25,
                    "character": 3
                  },
                  "doc": {
                    "__schema": "DocSchema",
                    "location": {
                      "filePath": "typescript-compiler-options.ts",
                      "line": 21,
                      "character": 3
                    },
                    "raw": "/**\n   * Run the compiler for .js files. this will only affect whether to run the compiler on the files\n   * or not. It won't change the tsconfig to support or not support js files.\n   */",
                    "comment": "Run the compiler for .js files. this will only affect whether to run the compiler on the files\nor not. It won't change the tsconfig to support or not support js files."
                  },
                  "signature": "(property) compileJs?: boolean",
                  "name": "compileJs",
                  "type": {
                    "__schema": "KeywordTypeSchema",
                    "location": {
                      "filePath": "typescript-compiler-options.ts",
                      "line": 25,
                      "character": 15
                    },
                    "name": "boolean"
                  },
                  "isOptional": true
                },
                {
                  "__schema": "VariableLikeSchema",
                  "location": {
                    "filePath": "typescript-compiler-options.ts",
                    "line": 31,
                    "character": 3
                  },
                  "doc": {
                    "__schema": "DocSchema",
                    "location": {
                      "filePath": "typescript-compiler-options.ts",
                      "line": 27,
                      "character": 3
                    },
                    "raw": "/**\n   * Run the compiler for .js files. this will only affect whether to run the compiler on the files\n   * or not. It won't change the tsconfig to support or not support jsx files.\n   */",
                    "comment": "Run the compiler for .js files. this will only affect whether to run the compiler on the files\nor not. It won't change the tsconfig to support or not support jsx files."
                  },
                  "signature": "(property) compileJsx?: boolean",
                  "name": "compileJsx",
                  "type": {
                    "__schema": "KeywordTypeSchema",
                    "location": {
                      "filePath": "typescript-compiler-options.ts",
                      "line": 31,
                      "character": 16
                    },
                    "name": "boolean"
                  },
                  "isOptional": true
                },
                {
                  "__schema": "VariableLikeSchema",
                  "location": {
                    "filePath": "typescript-compiler-options.ts",
                    "line": 41,
                    "character": 3
                  },
                  "doc": {
                    "__schema": "DocSchema",
                    "location": {
                      "filePath": "typescript-compiler-options.ts",
                      "line": 33,
                      "character": 3
                    },
                    "raw": "/**\n   * By default when setting the tsconfig to have\n   * \"moduleResolution\": \"NodeNext\",\n   * \"module\": \"NodeNext\"\n   * TS will check the closest package.json to determine if it should emit ESM to CJS outputs.\n   * Since in bit we don't have a package.json usually, TS will just emit CJS\n   * This option will force TS to emit ESM\n   */",
                    "comment": "By default when setting the tsconfig to have\n\"moduleResolution\": \"NodeNext\",\n\"module\": \"NodeNext\"\nTS will check the closest package.json to determine if it should emit ESM to CJS outputs.\nSince in bit we don't have a package.json usually, TS will just emit CJS\nThis option will force TS to emit ESM"
                  },
                  "signature": "(property) esm?: boolean",
                  "name": "esm",
                  "type": {
                    "__schema": "KeywordTypeSchema",
                    "location": {
                      "filePath": "typescript-compiler-options.ts",
                      "line": 41,
                      "character": 9
                    },
                    "name": "boolean"
                  },
                  "isOptional": true
                },
                {
                  "__schema": "VariableLikeSchema",
                  "location": {
                    "filePath": "typescript-compiler-options.ts",
                    "line": 46,
                    "character": 3
                  },
                  "doc": {
                    "__schema": "DocSchema",
                    "location": {
                      "filePath": "typescript-compiler-options.ts",
                      "line": 43,
                      "character": 3
                    },
                    "raw": "/**\n   * instance of typescript to use.\n   */",
                    "comment": "instance of typescript to use."
                  },
                  "signature": "(property) typescript?: any",
                  "name": "typescript",
                  "type": {
                    "__schema": "KeywordTypeSchema",
                    "location": {
                      "filePath": "typescript-compiler-options.ts",
                      "line": 46,
                      "character": 16
                    },
                    "name": "any"
                  },
                  "isOptional": true
                },
                {
                  "__schema": "VariableLikeSchema",
                  "location": {
                    "filePath": "typescript-compiler-options.ts",
                    "line": 53,
                    "character": 3
                  },
                  "doc": {
                    "__schema": "DocSchema",
                    "location": {
                      "filePath": "typescript-compiler-options.ts",
                      "line": 50,
                      "character": 3
                    },
                    "raw": "/**\n   * array of tsconfig transformers to apply.\n   */",
                    "comment": "array of tsconfig transformers to apply."
                  },
                  "signature": "(property) transformers?: TsConfigTransformer[]",
                  "name": "transformers",
                  "type": {
                    "__schema": "TypeArraySchema",
                    "location": {
                      "filePath": "typescript-compiler-options.ts",
                      "line": 53,
                      "character": 18
                    },
                    "type": {
                      "__schema": "TypeRefSchema",
                      "location": {
                        "filePath": "typescript-compiler-options.ts",
                        "line": 53,
                        "character": 18
                      },
                      "name": "TsConfigTransformer",
                      "componentId": {
                        "scope": "teambit.typescript",
                        "name": "typescript"
                      }
                    }
                  },
                  "isOptional": true
                },
                {
                  "__schema": "VariableLikeSchema",
                  "location": {
                    "filePath": "typescript-compiler-options.ts",
                    "line": 58,
                    "character": 3
                  },
                  "doc": {
                    "__schema": "DocSchema",
                    "location": {
                      "filePath": "typescript-compiler-options.ts",
                      "line": 55,
                      "character": 3
                    },
                    "raw": "/**\n   * array of transpilation transformers to apply.\n   */",
                    "comment": "array of transpilation transformers to apply."
                  },
                  "signature": "(property) typescriptTransformers?: CustomTransformers",
                  "name": "typescriptTransformers",
                  "type": {
                    "__schema": "TypeRefSchema",
                    "location": {
                      "filePath": "typescript-compiler-options.ts",
                      "line": 58,
                      "character": 3
                    },
                    "name": "CustomTransformers",
                    "packageName": "typescript"
                  },
                  "isOptional": true
                }
              ]
            },
            {
              "__schema": "TypeRefSchema",
              "location": {
                "filePath": "typescript-compiler-options.ts",
                "line": 59,
                "character": 5
              },
              "name": "Partial",
              "typeArgs": [
                {
                  "__schema": "TypeRefSchema",
                  "location": {
                    "filePath": "typescript-compiler-options.ts",
                    "line": 59,
                    "character": 13
                  },
                  "name": "CompilerOptions",
                  "packageName": "typescript"
                }
              ]
            }
          ]
        }
      },
      {
        "__schema": "FunctionLikeSchema",
        "location": {
          "filePath": "resolve-types.ts",
          "line": 14,
          "character": 1
        },
        "signature": "function resolveTypes(rootDir: string, typesDirs: string[]): string[]",
        "name": "resolveTypes",
        "params": [
          {
            "__schema": "ParameterSchema",
            "location": {
              "filePath": "resolve-types.ts",
              "line": 14,
              "character": 30
            },
            "name": "rootDir",
            "type": {
              "__schema": "KeywordTypeSchema",
              "location": {
                "filePath": "resolve-types.ts",
                "line": 14,
                "character": 39
              },
              "name": "string"
            },
            "isOptional": false,
            "isSpread": false
          },
          {
            "__schema": "ParameterSchema",
            "location": {
              "filePath": "resolve-types.ts",
              "line": 14,
              "character": 47
            },
            "name": "typesDirs",
            "type": {
              "__schema": "TypeArraySchema",
              "location": {
                "filePath": "resolve-types.ts",
                "line": 14,
                "character": 58
              },
              "type": {
                "__schema": "KeywordTypeSchema",
                "location": {
                  "filePath": "resolve-types.ts",
                  "line": 14,
                  "character": 58
                },
                "name": "string"
              }
            },
            "isOptional": false,
            "isSpread": false
          }
        ],
        "returnType": {
          "__schema": "TypeArraySchema",
          "location": {
            "filePath": "resolve-types.ts",
            "line": 14,
            "character": 69
          },
          "type": {
            "__schema": "KeywordTypeSchema",
            "location": {
              "filePath": "resolve-types.ts",
              "line": 14,
              "character": 69
            },
            "name": "string"
          }
        },
        "modifiers": [
          "export"
        ]
      },
      {
        "__schema": "FunctionLikeSchema",
        "location": {
          "filePath": "get-ts-config.ts",
          "line": 18,
          "character": 1
        },
        "signature": "function computeTsConfig({ tsconfig, compilerOptions, }: ComputeTsConfigOptions): Except<TsConfigJson, \"extends\"> | {\n    compilerOptions: CompilerOptions;\n}",
        "name": "computeTsConfig",
        "params": [
          {
            "__schema": "ParameterSchema",
            "location": {
              "filePath": "get-ts-config.ts",
              "line": 18,
              "character": 33
            },
            "name": "{ tsconfig, compilerOptions }",
            "type": {
              "__schema": "TypeRefSchema",
              "location": {
                "filePath": "get-ts-config.ts",
                "line": 21,
                "character": 4
              },
              "name": "ComputeTsConfigOptions",
              "internalFilePath": "get-ts-config.ts"
            },
            "isOptional": false,
            "objectBindingNodes": [
              {
                "__schema": "InferenceTypeSchema",
                "location": {
                  "filePath": "get-ts-config.ts",
                  "line": 19,
                  "character": 3
                },
                "name": "tsconfig",
                "type": "string",
                "isSpread": false
              },
              {
                "__schema": "InferenceTypeSchema",
                "location": {
                  "filePath": "get-ts-config.ts",
                  "line": 20,
                  "character": 3
                },
                "name": "compilerOptions",
                "type": "CompilerOptions",
                "isSpread": false
              }
            ],
            "isSpread": false
          }
        ],
        "returnType": {
          "__schema": "InferenceTypeSchema",
          "location": {
            "filePath": "get-ts-config.ts",
            "line": 18,
            "character": 1
          },
          "type": "Except<TsConfigJson, \"extends\"> | {\n    compilerOptions: CompilerOptions;\n}"
        },
        "modifiers": [
          "export"
        ]
      },
      {
        "__schema": "FunctionLikeSchema",
        "location": {
          "filePath": "expand-include-exclude.ts",
          "line": 15,
          "character": 1
        },
        "doc": {
          "__schema": "DocSchema",
          "location": {
            "filePath": "expand-include-exclude.ts",
            "line": 6,
            "character": 1
          },
          "raw": "/**\n * It takes a tsconfig.json file, a list of component directories, and returns a new tsconfig.json file with the include\n * and exclude properties expanded to include all the component directories\n * @param {string} tsConfigPath - The path to the tsconfig.json file.\n * @param {TsConfigJson} tsConfig - The tsconfig.json file that we're going to modify.\n * @param {string[]} compDirs - An array of paths to the component directories.\n * @returns the tsConfig object.\n */",
          "comment": "It takes a tsconfig.json file, a list of component directories, and returns a new tsconfig.json file with the include\nand exclude properties expanded to include all the component directories",
          "tags": [
            {
              "__schema": "PropertyLikeTagSchema",
              "location": {
                "filePath": "expand-include-exclude.ts",
                "line": 9,
                "character": 4
              },
              "name": "tsConfigPath",
              "tagName": "parameter",
              "comment": "- The path to the tsconfig.json file.",
              "type": {
                "__schema": "KeywordTypeSchema",
                "location": {
                  "filePath": "expand-include-exclude.ts",
                  "line": 9,
                  "character": 12
                },
                "name": "string"
              }
            },
            {
              "__schema": "PropertyLikeTagSchema",
              "location": {
                "filePath": "expand-include-exclude.ts",
                "line": 10,
                "character": 4
              },
              "name": "tsConfig",
              "tagName": "parameter",
              "comment": "- The tsconfig.json file that we're going to modify.",
              "type": {
                "__schema": "TypeRefSchema",
                "location": {
                  "filePath": "expand-include-exclude.ts",
                  "line": 10,
                  "character": 12
                },
                "name": "TsConfigJson",
                "packageName": "get-tsconfig"
              }
            },
            {
              "__schema": "PropertyLikeTagSchema",
              "location": {
                "filePath": "expand-include-exclude.ts",
                "line": 11,
                "character": 4
              },
              "name": "compDirs",
              "tagName": "parameter",
              "comment": "- An array of paths to the component directories.",
              "type": {
                "__schema": "TypeArraySchema",
                "location": {
                  "filePath": "expand-include-exclude.ts",
                  "line": 11,
                  "character": 12
                },
                "type": {
                  "__schema": "KeywordTypeSchema",
                  "location": {
                    "filePath": "expand-include-exclude.ts",
                    "line": 11,
                    "character": 12
                  },
                  "name": "string"
                }
              }
            },
            {
              "__schema": "ReturnTagSchema",
              "location": {
                "filePath": "expand-include-exclude.ts",
                "line": 12,
                "character": 4
              },
              "tagName": "return",
              "comment": "the tsConfig object."
            }
          ]
        },
        "signature": "function expandIncludeExclude(tsConfigPath: string, tsConfig: TsConfigJson, compDirs: string[], globalTypesDir?: string): TsConfigJson",
        "name": "expandIncludeExclude",
        "params": [
          {
            "__schema": "ParameterSchema",
            "location": {
              "filePath": "expand-include-exclude.ts",
              "line": 16,
              "character": 3
            },
            "name": "tsConfigPath",
            "type": {
              "__schema": "KeywordTypeSchema",
              "location": {
                "filePath": "expand-include-exclude.ts",
                "line": 16,
                "character": 17
              },
              "name": "string"
            },
            "isOptional": false,
            "isSpread": false
          },
          {
            "__schema": "ParameterSchema",
            "location": {
              "filePath": "expand-include-exclude.ts",
              "line": 17,
              "character": 3
            },
            "name": "tsConfig",
            "type": {
              "__schema": "TypeRefSchema",
              "location": {
                "filePath": "expand-include-exclude.ts",
                "line": 17,
                "character": 13
              },
              "name": "TsConfigJson",
              "packageName": "get-tsconfig"
            },
            "isOptional": false,
            "isSpread": false
          },
          {
            "__schema": "ParameterSchema",
            "location": {
              "filePath": "expand-include-exclude.ts",
              "line": 18,
              "character": 3
            },
            "name": "compDirs",
            "type": {
              "__schema": "TypeArraySchema",
              "location": {
                "filePath": "expand-include-exclude.ts",
                "line": 18,
                "character": 13
              },
              "type": {
                "__schema": "KeywordTypeSchema",
                "location": {
                  "filePath": "expand-include-exclude.ts",
                  "line": 18,
                  "character": 13
                },
                "name": "string"
              }
            },
            "isOptional": false,
            "isSpread": false
          },
          {
            "__schema": "ParameterSchema",
            "location": {
              "filePath": "expand-include-exclude.ts",
              "line": 19,
              "character": 3
            },
            "name": "globalTypesDir",
            "type": {
              "__schema": "KeywordTypeSchema",
              "location": {
                "filePath": "expand-include-exclude.ts",
                "line": 19,
                "character": 20
              },
              "name": "string"
            },
            "isOptional": true,
            "isSpread": false
          }
        ],
        "returnType": {
          "__schema": "TypeRefSchema",
          "location": {
            "filePath": "expand-include-exclude.ts",
            "line": 15,
            "character": 1
          },
          "name": "TsConfigJson",
          "packageName": "get-tsconfig"
        },
        "modifiers": [
          "export"
        ]
      }
    ],
    "internals": []
  },
  "internals": [
    {
      "__schema": "ModuleSchema",
      "location": {
        "filePath": "typescript-compiler.ts",
        "line": 1,
        "character": 1
      },
      "exports": [
        {
          "__schema": "ClassSchema",
          "location": {
            "filePath": "typescript-compiler.ts",
            "line": 23,
            "character": 1
          },
          "signature": "class TypescriptCompiler",
          "name": "TypescriptCompiler",
          "members": [
            {
              "__schema": "VariableLikeSchema",
              "location": {
                "filePath": "typescript-compiler.ts",
                "line": 24,
                "character": 3
              },
              "signature": "(property) TypescriptCompiler.distDir: string",
              "name": "distDir",
              "type": {
                "__schema": "KeywordTypeSchema",
                "location": {
                  "filePath": "typescript-compiler.ts",
                  "line": 24,
                  "character": 12
                },
                "name": "string"
              },
              "isOptional": false
            },
            {
              "__schema": "VariableLikeSchema",
              "location": {
                "filePath": "typescript-compiler.ts",
                "line": 26,
                "character": 3
              },
              "signature": "(property) TypescriptCompiler.distGlobPatterns: string[]",
              "name": "distGlobPatterns",
              "type": {
                "__schema": "TypeArraySchema",
                "location": {
                  "filePath": "typescript-compiler.ts",
                  "line": 26,
                  "character": 21
                },
                "type": {
                  "__schema": "KeywordTypeSchema",
                  "location": {
                    "filePath": "typescript-compiler.ts",
                    "line": 26,
                    "character": 21
                  },
                  "name": "string"
                }
              },
              "isOptional": false
            },
            {
              "__schema": "VariableLikeSchema",
              "location": {
                "filePath": "typescript-compiler.ts",
                "line": 28,
                "character": 3
              },
              "signature": "(property) TypescriptCompiler.shouldCopyNonSupportedFiles: boolean",
              "name": "shouldCopyNonSupportedFiles",
              "type": {
                "__schema": "KeywordTypeSchema",
                "location": {
                  "filePath": "typescript-compiler.ts",
                  "line": 28,
                  "character": 32
                },
                "name": "boolean"
              },
              "isOptional": false
            },
            {
              "__schema": "VariableLikeSchema",
              "location": {
                "filePath": "typescript-compiler.ts",
                "line": 30,
                "character": 3
              },
              "signature": "(property) TypescriptCompiler.artifactName: string",
              "name": "artifactName",
              "type": {
                "__schema": "KeywordTypeSchema",
                "location": {
                  "filePath": "typescript-compiler.ts",
                  "line": 30,
                  "character": 17
                },
                "name": "string"
              },
              "isOptional": false
            },
            {
              "__schema": "ConstructorSchema",
              "location": {
                "filePath": "typescript-compiler.ts",
                "line": 32,
                "character": 3
              },
              "signature": "constructor TypescriptCompiler(id: string, logger: Logger, options: TypeScriptCompilerOptions, rawTsConfig: Record<string, any>, tsModule: typeof typescript): TypescriptCompiler",
              "name": "constructor",
              "params": [
                {
                  "__schema": "ParameterSchema",
                  "location": {
                    "filePath": "typescript-compiler.ts",
                    "line": 33,
                    "character": 5
                  },
                  "name": "id",
                  "type": {
                    "__schema": "KeywordTypeSchema",
                    "location": {
                      "filePath": "typescript-compiler.ts",
                      "line": 33,
                      "character": 18
                    },
                    "name": "string"
                  },
                  "isOptional": true,
                  "defaultValue": "'typescript-compiler'",
                  "isSpread": false
                },
                {
                  "__schema": "ParameterSchema",
                  "location": {
                    "filePath": "typescript-compiler.ts",
                    "line": 34,
                    "character": 5
                  },
                  "name": "logger",
                  "type": {
                    "__schema": "TypeRefSchema",
                    "location": {
                      "filePath": "typescript-compiler.ts",
                      "line": 34,
                      "character": 21
                    },
                    "name": "Logger",
                    "componentId": {
                      "scope": "teambit.harmony",
                      "name": "logger"
                    }
                  },
                  "isOptional": false,
                  "isSpread": false
                },
                {
                  "__schema": "ParameterSchema",
                  "location": {
                    "filePath": "typescript-compiler.ts",
                    "line": 35,
                    "character": 5
                  },
                  "name": "options",
                  "type": {
                    "__schema": "TypeRefSchema",
                    "location": {
                      "filePath": "typescript-compiler.ts",
                      "line": 35,
                      "character": 22
                    },
                    "name": "TypeScriptCompilerOptions"
                  },
                  "isOptional": false,
                  "isSpread": false
                },
                {
                  "__schema": "ParameterSchema",
                  "location": {
                    "filePath": "typescript-compiler.ts",
                    "line": 36,
                    "character": 5
                  },
                  "name": "rawTsConfig",
                  "type": {
                    "__schema": "TypeRefSchema",
                    "location": {
                      "filePath": "typescript-compiler.ts",
                      "line": 36,
                      "character": 26
                    },
                    "name": "Record",
                    "typeArgs": [
                      {
                        "__schema": "KeywordTypeSchema",
                        "location": {
                          "filePath": "typescript-compiler.ts",
                          "line": 36,
                          "character": 33
                        },
                        "name": "string"
                      },
                      {
                        "__schema": "KeywordTypeSchema",
                        "location": {
                          "filePath": "typescript-compiler.ts",
                          "line": 36,
                          "character": 41
                        },
                        "name": "any"
                      }
                    ]
                  },
                  "isOptional": false,
                  "isSpread": false
                },
                {
                  "__schema": "ParameterSchema",
                  "location": {
                    "filePath": "typescript-compiler.ts",
                    "line": 37,
                    "character": 5
                  },
                  "name": "tsModule",
                  "type": {
                    "__schema": "TypeQuerySchema",
                    "location": {
                      "filePath": "typescript-compiler.ts",
                      "line": 37,
                      "character": 23
                    },
                    "signature": "(alias) namespace typescript\nimport typescript",
                    "type": {
                      "__schema": "TypeRefSchema",
                      "location": {
                        "filePath": "typescript-compiler.ts",
                        "line": 37,
                        "character": 30
                      },
                      "name": "typescript",
                      "packageName": "typescript"
                    }
                  },
                  "isOptional": false,
                  "isSpread": false
                }
              ],
              "returnType": {
                "__schema": "ThisTypeSchema",
                "location": {
                  "filePath": "typescript-compiler.ts",
                  "line": 23,
                  "character": 1
                },
                "name": "TypescriptCompiler"
              },
              "modifiers": []
            },
            {
              "__schema": "VariableLikeSchema",
              "location": {
                "filePath": "typescript-compiler.ts",
                "line": 59,
                "character": 3
              },
              "signature": "(property) TypescriptCompiler.displayName: string",
              "name": "displayName",
              "type": {
                "__schema": "InferenceTypeSchema",
                "location": {
                  "filePath": "typescript-compiler.ts",
                  "line": 59,
                  "character": 3
                },
                "type": "string"
              },
              "isOptional": true,
              "defaultValue": "'TypeScript'"
            },
            {
              "__schema": "VariableLikeSchema",
              "location": {
                "filePath": "typescript-compiler.ts",
                "line": 61,
                "character": 3
              },
              "signature": "(property) TypescriptCompiler.deleteDistDir: boolean",
              "name": "deleteDistDir",
              "type": {
                "__schema": "InferenceTypeSchema",
                "location": {
                  "filePath": "typescript-compiler.ts",
                  "line": 61,
                  "character": 3
                },
                "type": "boolean"
              },
              "isOptional": true,
              "defaultValue": "false"
            },
            {
              "__schema": "GetAccessorSchema",
              "location": {
                "filePath": "typescript-compiler.ts",
                "line": 67,
                "character": 3
              },
              "signature": "(getter) TypescriptCompiler.tsconfig: Record<string, any>",
              "name": "tsconfig",
              "type": {
                "__schema": "InferenceTypeSchema",
                "location": {
                  "filePath": "typescript-compiler.ts",
                  "line": 67,
                  "character": 3
                },
                "type": "Record<string, any>"
              }
            },
            {
              "__schema": "FunctionLikeSchema",
              "location": {
                "filePath": "typescript-compiler.ts",
                "line": 71,
                "character": 3
              },
              "signature": "(method) TypescriptCompiler.displayConfig(): string",
              "name": "displayConfig",
              "params": [],
              "returnType": {
                "__schema": "InferenceTypeSchema",
                "location": {
                  "filePath": "typescript-compiler.ts",
                  "line": 71,
                  "character": 3
                },
                "type": "string"
              },
              "modifiers": []
            },
            {
              "__schema": "FunctionLikeSchema",
              "location": {
                "filePath": "typescript-compiler.ts",
                "line": 75,
                "character": 3
              },
              "signature": "(method) TypescriptCompiler.getDistDir(): string",
              "name": "getDistDir",
              "params": [],
              "returnType": {
                "__schema": "InferenceTypeSchema",
                "location": {
                  "filePath": "typescript-compiler.ts",
                  "line": 75,
                  "character": 3
                },
                "type": "string"
              },
              "modifiers": []
            },
            {
              "__schema": "FunctionLikeSchema",
              "location": {
                "filePath": "typescript-compiler.ts",
                "line": 82,
                "character": 3
              },
              "doc": {
                "__schema": "DocSchema",
                "location": {
                  "filePath": "typescript-compiler.ts",
                  "line": 79,
                  "character": 3
                },
                "raw": "/**\n   * compile one file on the workspace\n   */",
                "comment": "compile one file on the workspace"
              },
              "signature": "(method) TypescriptCompiler.transpileFile(fileContent: string, options: TranspileFileParams): TranspileFileOutputOneFile[]",
              "name": "transpileFile",
              "params": [
                {
                  "__schema": "ParameterSchema",
                  "location": {
                    "filePath": "typescript-compiler.ts",
                    "line": 83,
                    "character": 5
                  },
                  "name": "fileContent",
                  "type": {
                    "__schema": "KeywordTypeSchema",
                    "location": {
                      "filePath": "typescript-compiler.ts",
                      "line": 83,
                      "character": 18
                    },
                    "name": "string"
                  },
                  "isOptional": false,
                  "isSpread": false
                },
                {
                  "__schema": "ParameterSchema",
                  "location": {
                    "filePath": "typescript-compiler.ts",
                    "line": 84,
                    "character": 5
                  },
                  "name": "options",
                  "type": {
                    "__schema": "TypeRefSchema",
                    "location": {
                      "filePath": "typescript-compiler.ts",
                      "line": 84,
                      "character": 14
                    },
                    "name": "TranspileFileParams",
                    "componentId": {
                      "scope": "teambit.compilation",
                      "name": "compiler"
                    }
                  },
                  "isOptional": false,
                  "isSpread": false
                }
              ],
              "returnType": {
                "__schema": "TypeRefSchema",
                "location": {
                  "filePath": "typescript-compiler.ts",
                  "line": 85,
                  "character": 6
                },
                "name": "TranspileFileOutput",
                "componentId": {
                  "scope": "teambit.compilation",
                  "name": "compiler"
                }
              },
              "modifiers": []
            },
            {
              "__schema": "FunctionLikeSchema",
              "location": {
                "filePath": "typescript-compiler.ts",
                "line": 138,
                "character": 3
              },
              "signature": "(method) TypescriptCompiler.preBuild(context: BuildContext): Promise<void>",
              "name": "preBuild",
              "params": [
                {
                  "__schema": "ParameterSchema",
                  "location": {
                    "filePath": "typescript-compiler.ts",
                    "line": 138,
                    "character": 18
                  },
                  "name": "context",
                  "type": {
                    "__schema": "TypeRefSchema",
                    "location": {
                      "filePath": "typescript-compiler.ts",
                      "line": 138,
                      "character": 27
                    },
                    "name": "BuildContext",
                    "componentId": {
                      "scope": "teambit.pipelines",
                      "name": "builder"
                    }
                  },
                  "isOptional": false,
                  "isSpread": false
                }
              ],
              "returnType": {
                "__schema": "InferenceTypeSchema",
                "location": {
                  "filePath": "typescript-compiler.ts",
                  "line": 138,
                  "character": 3
                },
                "type": "Promise<void>"
              },
              "modifiers": [
                "async"
              ]
            },
            {
              "__schema": "FunctionLikeSchema",
              "location": {
                "filePath": "typescript-compiler.ts",
                "line": 149,
                "character": 3
              },
              "doc": {
                "__schema": "DocSchema",
                "location": {
                  "filePath": "typescript-compiler.ts",
                  "line": 146,
                  "character": 3
                },
                "raw": "/**\n   * compile multiple components on the capsules\n   */",
                "comment": "compile multiple components on the capsules"
              },
              "signature": "(method) TypescriptCompiler.build(context: BuildContext): Promise<BuiltTaskResult>",
              "name": "build",
              "params": [
                {
                  "__schema": "ParameterSchema",
                  "location": {
                    "filePath": "typescript-compiler.ts",
                    "line": 149,
                    "character": 15
                  },
                  "name": "context",
                  "type": {
                    "__schema": "TypeRefSchema",
                    "location": {
                      "filePath": "typescript-compiler.ts",
                      "line": 149,
                      "character": 24
                    },
                    "name": "BuildContext",
                    "componentId": {
                      "scope": "teambit.pipelines",
                      "name": "builder"
                    }
                  },
                  "isOptional": false,
                  "isSpread": false
                }
              ],
              "returnType": {
                "__schema": "TypeRefSchema",
                "location": {
                  "filePath": "typescript-compiler.ts",
                  "line": 149,
                  "character": 39
                },
                "name": "Promise",
                "typeArgs": [
                  {
                    "__schema": "TypeRefSchema",
                    "location": {
                      "filePath": "typescript-compiler.ts",
                      "line": 149,
                      "character": 47
                    },
                    "name": "BuiltTaskResult",
                    "componentId": {
                      "scope": "teambit.pipelines",
                      "name": "builder"
                    }
                  }
                ]
              },
              "modifiers": [
                "async"
              ]
            },
            {
              "__schema": "FunctionLikeSchema",
              "location": {
                "filePath": "typescript-compiler.ts",
                "line": 158,
                "character": 3
              },
              "signature": "(method) TypescriptCompiler.postBuild(context: BuildContext): Promise<void>",
              "name": "postBuild",
              "params": [
                {
                  "__schema": "ParameterSchema",
                  "location": {
                    "filePath": "typescript-compiler.ts",
                    "line": 158,
                    "character": 19
                  },
                  "name": "context",
                  "type": {
                    "__schema": "TypeRefSchema",
                    "location": {
                      "filePath": "typescript-compiler.ts",
                      "line": 158,
                      "character": 28
                    },
                    "name": "BuildContext",
                    "componentId": {
                      "scope": "teambit.pipelines",
                      "name": "builder"
                    }
                  },
                  "isOptional": false,
                  "isSpread": false
                }
              ],
              "returnType": {
                "__schema": "InferenceTypeSchema",
                "location": {
                  "filePath": "typescript-compiler.ts",
                  "line": 158,
                  "character": 3
                },
                "type": "Promise<void>"
              },
              "modifiers": [
                "async"
              ]
            },
            {
              "__schema": "FunctionLikeSchema",
              "location": {
                "filePath": "typescript-compiler.ts",
                "line": 172,
                "character": 3
              },
              "signature": "(method) TypescriptCompiler.getArtifactDefinition(): {\n    generatedBy: string;\n    name: string;\n    globPatterns: string[];\n}[]",
              "name": "getArtifactDefinition",
              "params": [],
              "returnType": {
                "__schema": "InferenceTypeSchema",
                "location": {
                  "filePath": "typescript-compiler.ts",
                  "line": 172,
                  "character": 3
                },
                "type": "{\n    generatedBy: string;\n    name: string;\n    globPatterns: string[];\n}[]"
              },
              "modifiers": []
            },
            {
              "__schema": "FunctionLikeSchema",
              "location": {
                "filePath": "typescript-compiler.ts",
                "line": 185,
                "character": 3
              },
              "doc": {
                "__schema": "DocSchema",
                "location": {
                  "filePath": "typescript-compiler.ts",
                  "line": 182,
                  "character": 3
                },
                "raw": "/**\n   * given a source file, return its parallel in the dists. e.g. index.ts => dist/index.js\n   */",
                "comment": "given a source file, return its parallel in the dists. e.g. index.ts => dist/index.js"
              },
              "signature": "(method) TypescriptCompiler.getDistPathBySrcPath(srcPath: string): string",
              "name": "getDistPathBySrcPath",
              "params": [
                {
                  "__schema": "ParameterSchema",
                  "location": {
                    "filePath": "typescript-compiler.ts",
                    "line": 185,
                    "character": 24
                  },
                  "name": "srcPath",
                  "type": {
                    "__schema": "KeywordTypeSchema",
                    "location": {
                      "filePath": "typescript-compiler.ts",
                      "line": 185,
                      "character": 33
                    },
                    "name": "string"
                  },
                  "isOptional": false,
                  "isSpread": false
                }
              ],
              "returnType": {
                "__schema": "InferenceTypeSchema",
                "location": {
                  "filePath": "typescript-compiler.ts",
                  "line": 185,
                  "character": 3
                },
                "type": "string"
              },
              "modifiers": []
            },
            {
              "__schema": "FunctionLikeSchema",
              "location": {
                "filePath": "typescript-compiler.ts",
                "line": 193,
                "character": 3
              },
              "doc": {
                "__schema": "DocSchema",
                "location": {
                  "filePath": "typescript-compiler.ts",
                  "line": 190,
                  "character": 3
                },
                "raw": "/**\n   * whether typescript is able to compile the given path\n   */",
                "comment": "whether typescript is able to compile the given path"
              },
              "signature": "(method) TypescriptCompiler.isFileSupported(filePath: string): boolean",
              "name": "isFileSupported",
              "params": [
                {
                  "__schema": "ParameterSchema",
                  "location": {
                    "filePath": "typescript-compiler.ts",
                    "line": 193,
                    "character": 19
                  },
                  "name": "filePath",
                  "type": {
                    "__schema": "KeywordTypeSchema",
                    "location": {
                      "filePath": "typescript-compiler.ts",
                      "line": 193,
                      "character": 29
                    },
                    "name": "string"
                  },
                  "isOptional": false,
                  "isSpread": false
                }
              ],
              "returnType": {
                "__schema": "KeywordTypeSchema",
                "location": {
                  "filePath": "typescript-compiler.ts",
                  "line": 193,
                  "character": 38
                },
                "name": "boolean"
              },
              "modifiers": []
            },
            {
              "__schema": "FunctionLikeSchema",
              "location": {
                "filePath": "typescript-compiler.ts",
                "line": 387,
                "character": 3
              },
              "signature": "(method) TypescriptCompiler.version(): string",
              "name": "version",
              "params": [],
              "returnType": {
                "__schema": "InferenceTypeSchema",
                "location": {
                  "filePath": "typescript-compiler.ts",
                  "line": 387,
                  "character": 3
                },
                "type": "string"
              },
              "modifiers": []
            },
            {
              "__schema": "FunctionLikeSchema",
              "location": {
                "filePath": "typescript-compiler.ts",
                "line": 391,
                "character": 3
              },
              "signature": "(method) TypescriptCompiler.from(options: TypeScriptCompilerOptions): EnvHandler<Compiler>",
              "name": "from",
              "params": [
                {
                  "__schema": "ParameterSchema",
                  "location": {
                    "filePath": "typescript-compiler.ts",
                    "line": 391,
                    "character": 15
                  },
                  "name": "options",
                  "type": {
                    "__schema": "TypeRefSchema",
                    "location": {
                      "filePath": "typescript-compiler.ts",
                      "line": 391,
                      "character": 24
                    },
                    "name": "TypeScriptCompilerOptions"
                  },
                  "isOptional": false,
                  "isSpread": false
                }
              ],
              "returnType": {
                "__schema": "TypeRefSchema",
                "location": {
                  "filePath": "typescript-compiler.ts",
                  "line": 391,
                  "character": 52
                },
                "name": "EnvHandler",
                "componentId": {
                  "scope": "teambit.envs",
                  "name": "envs"
                },
                "typeArgs": [
                  {
                    "__schema": "TypeRefSchema",
                    "location": {
                      "filePath": "typescript-compiler.ts",
                      "line": 391,
                      "character": 63
                    },
                    "name": "Compiler",
                    "componentId": {
                      "scope": "teambit.compilation",
                      "name": "compiler"
                    }
                  }
                ]
              },
              "modifiers": [
                "static"
              ]
            }
          ],
          "extendsNodes": [],
          "implementNodes": [
            {
              "__schema": "ExpressionWithTypeArgumentsSchema",
              "location": {
                "filePath": "typescript-compiler.ts",
                "line": 23,
                "character": 44
              },
              "name": "implements Compiler",
              "typeArgs": [],
              "expression": {
                "__schema": "TypeRefSchema",
                "location": {
                  "filePath": "typescript-compiler.ts",
                  "line": 23,
                  "character": 44
                },
                "name": "Compiler",
                "packageName": "/tmp/capsules-root/sign-capsules/2023-11-13/18a28q6/teambit.typescript_typescript-compiler@6bf1dcfc0d8db8b051259d21706946b4d2f9feca/typescript-compiler.ts"
              }
            }
          ]
        }
      ],
      "internals": []
    },
    {
      "__schema": "ModuleSchema",
      "location": {
        "filePath": "ts-config-writer.ts",
        "line": 1,
        "character": 1
      },
      "exports": [
        {
          "__schema": "VariableLikeSchema",
          "location": {
            "filePath": "ts-config-writer.ts",
            "line": 25,
            "character": 14
          },
          "signature": "const GLOBAL_TYPES_DIR: \"global-types\"",
          "name": "GLOBAL_TYPES_DIR",
          "type": {
            "__schema": "InferenceTypeSchema",
            "location": {
              "filePath": "ts-config-writer.ts",
              "line": 25,
              "character": 14
            },
            "type": "\"global-types\""
          },
          "isOptional": false,
          "defaultValue": "'global-types'"
        },
        {
          "__schema": "TypeSchema",
          "location": {
            "filePath": "ts-config-writer.ts",
            "line": 27,
            "character": 1
          },
          "signature": "type TypescriptConfigWriterOptions = Pick<TypeScriptCompilerOptions, \"tsconfig\" | \"compilerOptions\" | \"types\"> & {\n    name?: string;\n}",
          "name": "TypescriptConfigWriterOptions",
          "type": {
            "__schema": "TypeIntersectionSchema",
            "location": {
              "filePath": "ts-config-writer.ts",
              "line": 27,
              "character": 45
            },
            "types": [
              {
                "__schema": "TypeRefSchema",
                "location": {
                  "filePath": "ts-config-writer.ts",
                  "line": 27,
                  "character": 45
                },
                "name": "Pick",
                "typeArgs": [
                  {
                    "__schema": "TypeRefSchema",
                    "location": {
                      "filePath": "ts-config-writer.ts",
                      "line": 28,
                      "character": 3
                    },
                    "name": "TypeScriptCompilerOptions"
                  },
                  {
                    "__schema": "TypeUnionSchema",
                    "location": {
                      "filePath": "ts-config-writer.ts",
                      "line": 29,
                      "character": 3
                    },
                    "types": [
                      {
                        "__schema": "LiteralTypeSchema",
                        "location": {
                          "filePath": "ts-config-writer.ts",
                          "line": 29,
                          "character": 3
                        },
                        "name": "'tsconfig'"
                      },
                      {
                        "__schema": "LiteralTypeSchema",
                        "location": {
                          "filePath": "ts-config-writer.ts",
                          "line": 29,
                          "character": 16
                        },
                        "name": "'compilerOptions'"
                      },
                      {
                        "__schema": "LiteralTypeSchema",
                        "location": {
                          "filePath": "ts-config-writer.ts",
                          "line": 29,
                          "character": 36
                        },
                        "name": "'types'"
                      }
                    ]
                  }
                ]
              },
              {
                "__schema": "TypeLiteralSchema",
                "location": {
                  "filePath": "ts-config-writer.ts",
                  "line": 30,
                  "character": 5
                },
                "members": [
                  {
                    "__schema": "VariableLikeSchema",
                    "location": {
                      "filePath": "ts-config-writer.ts",
                      "line": 31,
                      "character": 3
                    },
                    "signature": "(property) name?: string",
                    "name": "name",
                    "type": {
                      "__schema": "KeywordTypeSchema",
                      "location": {
                        "filePath": "ts-config-writer.ts",
                        "line": 31,
                        "character": 10
                      },
                      "name": "string"
                    },
                    "isOptional": true
                  }
                ]
              }
            ]
          }
        },
        {
          "__schema": "ClassSchema",
          "location": {
            "filePath": "ts-config-writer.ts",
            "line": 34,
            "character": 1
          },
          "signature": "class TypescriptConfigWriter",
          "name": "TypescriptConfigWriter",
          "members": [
            {
              "__schema": "VariableLikeSchema",
              "location": {
                "filePath": "ts-config-writer.ts",
                "line": 35,
                "character": 3
              },
              "signature": "(property) TypescriptConfigWriter.id: string",
              "name": "id",
              "type": {
                "__schema": "InferenceTypeSchema",
                "location": {
                  "filePath": "ts-config-writer.ts",
                  "line": 35,
                  "character": 3
                },
                "type": "string"
              },
              "isOptional": true,
              "defaultValue": "'typescript'"
            },
            {
              "__schema": "VariableLikeSchema",
              "location": {
                "filePath": "ts-config-writer.ts",
                "line": 37,
                "character": 3
              },
              "signature": "(property) TypescriptConfigWriter.patterns: string[]",
              "name": "patterns",
              "type": {
                "__schema": "TypeArraySchema",
                "location": {
                  "filePath": "ts-config-writer.ts",
                  "line": 37,
                  "character": 13
                },
                "type": {
                  "__schema": "KeywordTypeSchema",
                  "location": {
                    "filePath": "ts-config-writer.ts",
                    "line": 37,
                    "character": 13
                  },
                  "name": "string"
                }
              },
              "isOptional": true,
              "defaultValue": "[`**/${CONFIG_NAME}`]"
            },
            {
              "__schema": "ConstructorSchema",
              "location": {
                "filePath": "ts-config-writer.ts",
                "line": 39,
                "character": 3
              },
              "signature": "constructor TypescriptConfigWriter(name: string, tsconfig: Record<string, any>, typesPaths: string[], logger: Logger): TypescriptConfigWriter",
              "name": "constructor",
              "params": [
                {
                  "__schema": "ParameterSchema",
                  "location": {
                    "filePath": "ts-config-writer.ts",
                    "line": 40,
                    "character": 5
                  },
                  "name": "name",
                  "type": {
                    "__schema": "KeywordTypeSchema",
                    "location": {
                      "filePath": "ts-config-writer.ts",
                      "line": 40,
                      "character": 20
                    },
                    "name": "string"
                  },
                  "isOptional": false,
                  "isSpread": false
                },
                {
                  "__schema": "ParameterSchema",
                  "location": {
                    "filePath": "ts-config-writer.ts",
                    "line": 41,
                    "character": 5
                  },
                  "name": "tsconfig",
                  "type": {
                    "__schema": "TypeRefSchema",
                    "location": {
                      "filePath": "ts-config-writer.ts",
                      "line": 41,
                      "character": 23
                    },
                    "name": "Record",
                    "typeArgs": [
                      {
                        "__schema": "KeywordTypeSchema",
                        "location": {
                          "filePath": "ts-config-writer.ts",
                          "line": 41,
                          "character": 30
                        },
                        "name": "string"
                      },
                      {
                        "__schema": "KeywordTypeSchema",
                        "location": {
                          "filePath": "ts-config-writer.ts",
                          "line": 41,
                          "character": 38
                        },
                        "name": "any"
                      }
                    ]
                  },
                  "isOptional": false,
                  "isSpread": false
                },
                {
                  "__schema": "ParameterSchema",
                  "location": {
                    "filePath": "ts-config-writer.ts",
                    "line": 42,
                    "character": 5
                  },
                  "name": "typesPaths",
                  "type": {
                    "__schema": "TypeArraySchema",
                    "location": {
                      "filePath": "ts-config-writer.ts",
                      "line": 42,
                      "character": 25
                    },
                    "type": {
                      "__schema": "KeywordTypeSchema",
                      "location": {
                        "filePath": "ts-config-writer.ts",
                        "line": 42,
                        "character": 25
                      },
                      "name": "string"
                    }
                  },
                  "isOptional": true,
                  "defaultValue": "[]",
                  "isSpread": false
                },
                {
                  "__schema": "ParameterSchema",
                  "location": {
                    "filePath": "ts-config-writer.ts",
                    "line": 43,
                    "character": 5
                  },
                  "name": "logger",
                  "type": {
                    "__schema": "TypeRefSchema",
                    "location": {
                      "filePath": "ts-config-writer.ts",
                      "line": 43,
                      "character": 21
                    },
                    "name": "Logger",
                    "componentId": {
                      "scope": "teambit.harmony",
                      "name": "logger"
                    }
                  },
                  "isOptional": false,
                  "isSpread": false
                }
              ],
              "returnType": {
                "__schema": "ThisTypeSchema",
                "location": {
                  "filePath": "ts-config-writer.ts",
                  "line": 34,
                  "character": 1
                },
                "name": "TypescriptConfigWriter"
              },
              "modifiers": []
            },
            {
              "__schema": "FunctionLikeSchema",
              "location": {
                "filePath": "ts-config-writer.ts",
                "line": 46,
                "character": 3
              },
              "signature": "(method) TypescriptConfigWriter.calcConfigFiles(_executionContext: ExecutionContext, envMapValue: EnvMapValue, configsRootDir: string): ConfigFile[] | undefined",
              "name": "calcConfigFiles",
              "params": [
                {
                  "__schema": "ParameterSchema",
                  "location": {
                    "filePath": "ts-config-writer.ts",
                    "line": 47,
                    "character": 5
                  },
                  "name": "_executionContext",
                  "type": {
                    "__schema": "TypeRefSchema",
                    "location": {
                      "filePath": "ts-config-writer.ts",
                      "line": 47,
                      "character": 24
                    },
                    "name": "ExecutionContext",
                    "componentId": {
                      "scope": "teambit.envs",
                      "name": "envs"
                    }
                  },
                  "isOptional": false,
                  "isSpread": false
                },
                {
                  "__schema": "ParameterSchema",
                  "location": {
                    "filePath": "ts-config-writer.ts",
                    "line": 48,
                    "character": 5
                  },
                  "name": "envMapValue",
                  "type": {
                    "__schema": "TypeRefSchema",
                    "location": {
                      "filePath": "ts-config-writer.ts",
                      "line": 48,
                      "character": 18
                    },
                    "name": "EnvMapValue",
                    "componentId": {
                      "scope": "teambit.workspace",
                      "name": "workspace-config-files"
                    }
                  },
                  "isOptional": false,
                  "isSpread": false
                },
                {
                  "__schema": "ParameterSchema",
                  "location": {
                    "filePath": "ts-config-writer.ts",
                    "line": 49,
                    "character": 5
                  },
                  "name": "configsRootDir",
                  "type": {
                    "__schema": "KeywordTypeSchema",
                    "location": {
                      "filePath": "ts-config-writer.ts",
                      "line": 49,
                      "character": 21
                    },
                    "name": "string"
                  },
                  "isOptional": false,
                  "isSpread": false
                }
              ],
              "returnType": {
                "__schema": "TypeUnionSchema",
                "location": {
                  "filePath": "ts-config-writer.ts",
                  "line": 50,
                  "character": 6
                },
                "types": [
                  {
                    "__schema": "TypeArraySchema",
                    "location": {
                      "filePath": "ts-config-writer.ts",
                      "line": 50,
                      "character": 6
                    },
                    "type": {
                      "__schema": "TypeRefSchema",
                      "location": {
                        "filePath": "ts-config-writer.ts",
                        "line": 50,
                        "character": 6
                      },
                      "name": "ConfigFile",
                      "componentId": {
                        "scope": "teambit.workspace",
                        "name": "workspace-config-files"
                      }
                    }
                  },
                  {
                    "__schema": "KeywordTypeSchema",
                    "location": {
                      "filePath": "ts-config-writer.ts",
                      "line": 50,
                      "character": 21
                    },
                    "name": "undefined"
                  }
                ]
              },
              "modifiers": []
            },
            {
              "__schema": "FunctionLikeSchema",
              "location": {
                "filePath": "ts-config-writer.ts",
                "line": 87,
                "character": 3
              },
              "signature": "(method) TypescriptConfigWriter.mergeConfigFiles?(configFile: ConfigFile, configFile2: ConfigFile): string",
              "name": "mergeConfigFiles",
              "params": [
                {
                  "__schema": "ParameterSchema",
                  "location": {
                    "filePath": "ts-config-writer.ts",
                    "line": 87,
                    "character": 21
                  },
                  "name": "configFile",
                  "type": {
                    "__schema": "TypeRefSchema",
                    "location": {
                      "filePath": "ts-config-writer.ts",
                      "line": 87,
                      "character": 33
                    },
                    "name": "ConfigFile",
                    "componentId": {
                      "scope": "teambit.workspace",
                      "name": "workspace-config-files"
                    }
                  },
                  "isOptional": false,
                  "isSpread": false
                },
                {
                  "__schema": "ParameterSchema",
                  "location": {
                    "filePath": "ts-config-writer.ts",
                    "line": 87,
                    "character": 45
                  },
                  "name": "configFile2",
                  "type": {
                    "__schema": "TypeRefSchema",
                    "location": {
                      "filePath": "ts-config-writer.ts",
                      "line": 87,
                      "character": 58
                    },
                    "name": "ConfigFile",
                    "componentId": {
                      "scope": "teambit.workspace",
                      "name": "workspace-config-files"
                    }
                  },
                  "isOptional": false,
                  "isSpread": false
                }
              ],
              "returnType": {
                "__schema": "KeywordTypeSchema",
                "location": {
                  "filePath": "ts-config-writer.ts",
                  "line": 87,
                  "character": 71
                },
                "name": "string"
              },
              "modifiers": []
            },
            {
              "__schema": "FunctionLikeSchema",
              "location": {
                "filePath": "ts-config-writer.ts",
                "line": 102,
                "character": 3
              },
              "signature": "(method) TypescriptConfigWriter.generateExtendingFile(args: GenerateExtendingConfigFilesArgs): ExtendingConfigFile | undefined",
              "name": "generateExtendingFile",
              "params": [
                {
                  "__schema": "ParameterSchema",
                  "location": {
                    "filePath": "ts-config-writer.ts",
                    "line": 102,
                    "character": 25
                  },
                  "name": "args",
                  "type": {
                    "__schema": "TypeRefSchema",
                    "location": {
                      "filePath": "ts-config-writer.ts",
                      "line": 102,
                      "character": 31
                    },
                    "name": "GenerateExtendingConfigFilesArgs",
                    "componentId": {
                      "scope": "teambit.workspace",
                      "name": "workspace-config-files"
                    }
                  },
                  "isOptional": false,
                  "isSpread": false
                }
              ],
              "returnType": {
                "__schema": "TypeUnionSchema",
                "location": {
                  "filePath": "ts-config-writer.ts",
                  "line": 102,
                  "character": 66
                },
                "types": [
                  {
                    "__schema": "TypeRefSchema",
                    "location": {
                      "filePath": "ts-config-writer.ts",
                      "line": 102,
                      "character": 66
                    },
                    "name": "ExtendingConfigFile",
                    "componentId": {
                      "scope": "teambit.workspace",
                      "name": "workspace-config-files"
                    }
                  },
                  {
                    "__schema": "KeywordTypeSchema",
                    "location": {
                      "filePath": "ts-config-writer.ts",
                      "line": 102,
                      "character": 88
                    },
                    "name": "undefined"
                  }
                ]
              },
              "modifiers": []
            },
            {
              "__schema": "FunctionLikeSchema",
              "location": {
                "filePath": "ts-config-writer.ts",
                "line": 114,
                "character": 3
              },
              "signature": "(method) TypescriptConfigWriter.postProcessExtendingConfigFiles?(args: PostProcessExtendingConfigFilesArgs): Promise<string | undefined>",
              "name": "postProcessExtendingConfigFiles",
              "params": [
                {
                  "__schema": "ParameterSchema",
                  "location": {
                    "filePath": "ts-config-writer.ts",
                    "line": 114,
                    "character": 42
                  },
                  "name": "args",
                  "type": {
                    "__schema": "TypeRefSchema",
                    "location": {
                      "filePath": "ts-config-writer.ts",
                      "line": 114,
                      "character": 48
                    },
                    "name": "PostProcessExtendingConfigFilesArgs",
                    "componentId": {
                      "scope": "teambit.workspace",
                      "name": "workspace-config-files"
                    }
                  },
                  "isOptional": false,
                  "isSpread": false
                }
              ],
              "returnType": {
                "__schema": "TypeRefSchema",
                "location": {
                  "filePath": "ts-config-writer.ts",
                  "line": 114,
                  "character": 86
                },
                "name": "Promise",
                "typeArgs": [
                  {
                    "__schema": "TypeUnionSchema",
                    "location": {
                      "filePath": "ts-config-writer.ts",
                      "line": 114,
                      "character": 94
                    },
                    "types": [
                      {
                        "__schema": "KeywordTypeSchema",
                        "location": {
                          "filePath": "ts-config-writer.ts",
                          "line": 114,
                          "character": 94
                        },
                        "name": "string"
                      },
                      {
                        "__schema": "KeywordTypeSchema",
                        "location": {
                          "filePath": "ts-config-writer.ts",
                          "line": 114,
                          "character": 103
                        },
                        "name": "undefined"
                      }
                    ]
                  }
                ]
              },
              "modifiers": [
                "async"
              ]
            },
            {
              "__schema": "FunctionLikeSchema",
              "location": {
                "filePath": "ts-config-writer.ts",
                "line": 144,
                "character": 3
              },
              "signature": "(method) TypescriptConfigWriter.isBitGenerated(filePath: string): boolean",
              "name": "isBitGenerated",
              "params": [
                {
                  "__schema": "ParameterSchema",
                  "location": {
                    "filePath": "ts-config-writer.ts",
                    "line": 144,
                    "character": 18
                  },
                  "name": "filePath",
                  "type": {
                    "__schema": "KeywordTypeSchema",
                    "location": {
                      "filePath": "ts-config-writer.ts",
                      "line": 144,
                      "character": 28
                    },
                    "name": "string"
                  },
                  "isOptional": false,
                  "isSpread": false
                }
              ],
              "returnType": {
                "__schema": "KeywordTypeSchema",
                "location": {
                  "filePath": "ts-config-writer.ts",
                  "line": 144,
                  "character": 37
                },
                "name": "boolean"
              },
              "modifiers": []
            },
            {
              "__schema": "FunctionLikeSchema",
              "location": {
                "filePath": "ts-config-writer.ts",
                "line": 149,
                "character": 3
              },
              "signature": "(method) TypescriptConfigWriter.from(options: TypescriptConfigWriterOptions): ConfigWriterHandler",
              "name": "from",
              "params": [
                {
                  "__schema": "ParameterSchema",
                  "location": {
                    "filePath": "ts-config-writer.ts",
                    "line": 149,
                    "character": 15
                  },
                  "name": "options",
                  "type": {
                    "__schema": "TypeRefSchema",
                    "location": {
                      "filePath": "ts-config-writer.ts",
                      "line": 149,
                      "character": 24
                    },
                    "name": "TypescriptConfigWriterOptions",
                    "internalFilePath": "ts-config-writer.ts"
                  },
                  "isOptional": false,
                  "isSpread": false
                }
              ],
              "returnType": {
                "__schema": "TypeRefSchema",
                "location": {
                  "filePath": "ts-config-writer.ts",
                  "line": 149,
                  "character": 3
                },
                "name": "ConfigWriterHandler",
                "componentId": {
                  "scope": "teambit.workspace",
                  "name": "workspace-config-files"
                }
              },
              "modifiers": [
                "static"
              ]
            },
            {
              "__schema": "FunctionLikeSchema",
              "location": {
                "filePath": "ts-config-writer.ts",
                "line": 160,
                "character": 3
              },
              "signature": "(method) TypescriptConfigWriter.create(options: TypescriptConfigWriterOptions, logger: Logger): TypescriptConfigWriter",
              "name": "create",
              "params": [
                {
                  "__schema": "ParameterSchema",
                  "location": {
                    "filePath": "ts-config-writer.ts",
                    "line": 160,
                    "character": 17
                  },
                  "name": "options",
                  "type": {
                    "__schema": "TypeRefSchema",
                    "location": {
                      "filePath": "ts-config-writer.ts",
                      "line": 160,
                      "character": 26
                    },
                    "name": "TypescriptConfigWriterOptions",
                    "internalFilePath": "ts-config-writer.ts"
                  },
                  "isOptional": false,
                  "isSpread": false
                },
                {
                  "__schema": "ParameterSchema",
                  "location": {
                    "filePath": "ts-config-writer.ts",
                    "line": 160,
                    "character": 57
                  },
                  "name": "logger",
                  "type": {
                    "__schema": "TypeRefSchema",
                    "location": {
                      "filePath": "ts-config-writer.ts",
                      "line": 160,
                      "character": 65
                    },
                    "name": "Logger",
                    "componentId": {
                      "scope": "teambit.harmony",
                      "name": "logger"
                    }
                  },
                  "isOptional": false,
                  "isSpread": false
                }
              ],
              "returnType": {
                "__schema": "TypeRefSchema",
                "location": {
                  "filePath": "ts-config-writer.ts",
                  "line": 160,
                  "character": 3
                },
                "name": "TypescriptConfigWriter"
              },
              "modifiers": [
                "static"
              ]
            }
          ],
          "extendsNodes": [],
          "implementNodes": [
            {
              "__schema": "ExpressionWithTypeArgumentsSchema",
              "location": {
                "filePath": "ts-config-writer.ts",
                "line": 34,
                "character": 48
              },
              "name": "implements ConfigWriterEntry",
              "typeArgs": [],
              "expression": {
                "__schema": "TypeRefSchema",
                "location": {
                  "filePath": "ts-config-writer.ts",
                  "line": 34,
                  "character": 48
                },
                "name": "ConfigWriterEntry",
                "packageName": "/tmp/capsules-root/sign-capsules/2023-11-13/18a28q6/teambit.typescript_typescript-compiler@6bf1dcfc0d8db8b051259d21706946b4d2f9feca/ts-config-writer.ts"
              }
            }
          ]
        }
      ],
      "internals": [
        {
          "__schema": "ModuleSchema",
          "location": {
            "filePath": "ts-config-writer.ts",
            "line": 23,
            "character": 1
          },
          "exports": [
            {
              "__schema": "VariableLikeSchema",
              "location": {
                "filePath": "ts-config-writer.ts",
                "line": 23,
                "character": 7
              },
              "signature": "const CONFIG_NAME: \"tsconfig.json\"",
              "name": "CONFIG_NAME",
              "type": {
                "__schema": "InferenceTypeSchema",
                "location": {
                  "filePath": "ts-config-writer.ts",
                  "line": 23,
                  "character": 7
                },
                "type": "\"tsconfig.json\""
              },
              "isOptional": false,
              "defaultValue": "'tsconfig.json'"
            }
          ],
          "internals": []
        },
        {
          "__schema": "ModuleSchema",
          "location": {
            "filePath": "ts-config-writer.ts",
            "line": 24,
            "character": 1
          },
          "exports": [
            {
              "__schema": "VariableLikeSchema",
              "location": {
                "filePath": "ts-config-writer.ts",
                "line": 24,
                "character": 7
              },
              "signature": "const BIT_GENERATED_TS_CONFIG_COMMENT: \"// bit-generated-typescript-config\"",
              "name": "BIT_GENERATED_TS_CONFIG_COMMENT",
              "type": {
                "__schema": "InferenceTypeSchema",
                "location": {
                  "filePath": "ts-config-writer.ts",
                  "line": 24,
                  "character": 7
                },
                "type": "\"// bit-generated-typescript-config\""
              },
              "isOptional": false,
              "defaultValue": "'// bit-generated-typescript-config'"
            }
          ],
          "internals": []
        }
      ]
    },
    {
      "__schema": "ModuleSchema",
      "location": {
        "filePath": "typescript-compiler-options.ts",
        "line": 1,
        "character": 1
      },
      "exports": [
        {
          "__schema": "TypeSchema",
          "location": {
            "filePath": "typescript-compiler-options.ts",
            "line": 5,
            "character": 1
          },
          "signature": "type TypeScriptCompilerOptions = {\n    tsconfig?: string;\n    compilerOptions?: TsCompilerOptions;\n    types?: string[];\n    compileJs?: boolean;\n    compileJsx?: boolean;\n    esm?: boolean;\n    typescript?: any;\n    transformers?: TsConfigTransformer[];\n    typescriptTransformers?: CustomTransformers;\n} & Partial<CompilerOptions>",
          "name": "TypeScriptCompilerOptions",
          "type": {
            "__schema": "TypeIntersectionSchema",
            "location": {
              "filePath": "typescript-compiler-options.ts",
              "line": 5,
              "character": 41
            },
            "types": [
              {
                "__schema": "TypeLiteralSchema",
                "location": {
                  "filePath": "typescript-compiler-options.ts",
                  "line": 5,
                  "character": 41
                },
                "members": [
                  {
                    "__schema": "VariableLikeSchema",
                    "location": {
                      "filePath": "typescript-compiler-options.ts",
                      "line": 9,
                      "character": 3
                    },
                    "doc": {
                      "__schema": "DocSchema",
                      "location": {
                        "filePath": "typescript-compiler-options.ts",
                        "line": 6,
                        "character": 3
                      },
                      "raw": "/**\n   * path to tsconfig to use during compilation.\n   */",
                      "comment": "path to tsconfig to use during compilation."
                    },
                    "signature": "(property) tsconfig?: string",
                    "name": "tsconfig",
                    "type": {
                      "__schema": "KeywordTypeSchema",
                      "location": {
                        "filePath": "typescript-compiler-options.ts",
                        "line": 9,
                        "character": 14
                      },
                      "name": "string"
                    },
                    "isOptional": true
                  },
                  {
                    "__schema": "VariableLikeSchema",
                    "location": {
                      "filePath": "typescript-compiler-options.ts",
                      "line": 14,
                      "character": 3
                    },
                    "doc": {
                      "__schema": "DocSchema",
                      "location": {
                        "filePath": "typescript-compiler-options.ts",
                        "line": 11,
                        "character": 3
                      },
                      "raw": "/**\n   * a compiler options object.\n   */",
                      "comment": "a compiler options object."
                    },
                    "signature": "(property) compilerOptions?: TsCompilerOptions",
                    "name": "compilerOptions",
                    "type": {
                      "__schema": "TypeRefSchema",
                      "location": {
                        "filePath": "typescript-compiler-options.ts",
                        "line": 14,
                        "character": 21
                      },
                      "name": "TsCompilerOptions"
                    },
                    "isOptional": true
                  },
                  {
                    "__schema": "VariableLikeSchema",
                    "location": {
                      "filePath": "typescript-compiler-options.ts",
                      "line": 19,
                      "character": 3
                    },
                    "doc": {
                      "__schema": "DocSchema",
                      "location": {
                        "filePath": "typescript-compiler-options.ts",
                        "line": 16,
                        "character": 3
                      },
                      "raw": "/**\n   * path for .d.ts files to include during build.\n   */",
                      "comment": "path for .d.ts files to include during build."
                    },
                    "signature": "(property) types?: string[]",
                    "name": "types",
                    "type": {
                      "__schema": "TypeArraySchema",
                      "location": {
                        "filePath": "typescript-compiler-options.ts",
                        "line": 19,
                        "character": 11
                      },
                      "type": {
                        "__schema": "KeywordTypeSchema",
                        "location": {
                          "filePath": "typescript-compiler-options.ts",
                          "line": 19,
                          "character": 11
                        },
                        "name": "string"
                      }
                    },
                    "isOptional": true
                  },
                  {
                    "__schema": "VariableLikeSchema",
                    "location": {
                      "filePath": "typescript-compiler-options.ts",
                      "line": 25,
                      "character": 3
                    },
                    "doc": {
                      "__schema": "DocSchema",
                      "location": {
                        "filePath": "typescript-compiler-options.ts",
                        "line": 21,
                        "character": 3
                      },
                      "raw": "/**\n   * Run the compiler for .js files. this will only affect whether to run the compiler on the files\n   * or not. It won't change the tsconfig to support or not support js files.\n   */",
                      "comment": "Run the compiler for .js files. this will only affect whether to run the compiler on the files\nor not. It won't change the tsconfig to support or not support js files."
                    },
                    "signature": "(property) compileJs?: boolean",
                    "name": "compileJs",
                    "type": {
                      "__schema": "KeywordTypeSchema",
                      "location": {
                        "filePath": "typescript-compiler-options.ts",
                        "line": 25,
                        "character": 15
                      },
                      "name": "boolean"
                    },
                    "isOptional": true
                  },
                  {
                    "__schema": "VariableLikeSchema",
                    "location": {
                      "filePath": "typescript-compiler-options.ts",
                      "line": 31,
                      "character": 3
                    },
                    "doc": {
                      "__schema": "DocSchema",
                      "location": {
                        "filePath": "typescript-compiler-options.ts",
                        "line": 27,
                        "character": 3
                      },
                      "raw": "/**\n   * Run the compiler for .js files. this will only affect whether to run the compiler on the files\n   * or not. It won't change the tsconfig to support or not support jsx files.\n   */",
                      "comment": "Run the compiler for .js files. this will only affect whether to run the compiler on the files\nor not. It won't change the tsconfig to support or not support jsx files."
                    },
                    "signature": "(property) compileJsx?: boolean",
                    "name": "compileJsx",
                    "type": {
                      "__schema": "KeywordTypeSchema",
                      "location": {
                        "filePath": "typescript-compiler-options.ts",
                        "line": 31,
                        "character": 16
                      },
                      "name": "boolean"
                    },
                    "isOptional": true
                  },
                  {
                    "__schema": "VariableLikeSchema",
                    "location": {
                      "filePath": "typescript-compiler-options.ts",
                      "line": 41,
                      "character": 3
                    },
                    "doc": {
                      "__schema": "DocSchema",
                      "location": {
                        "filePath": "typescript-compiler-options.ts",
                        "line": 33,
                        "character": 3
                      },
                      "raw": "/**\n   * By default when setting the tsconfig to have\n   * \"moduleResolution\": \"NodeNext\",\n   * \"module\": \"NodeNext\"\n   * TS will check the closest package.json to determine if it should emit ESM to CJS outputs.\n   * Since in bit we don't have a package.json usually, TS will just emit CJS\n   * This option will force TS to emit ESM\n   */",
                      "comment": "By default when setting the tsconfig to have\n\"moduleResolution\": \"NodeNext\",\n\"module\": \"NodeNext\"\nTS will check the closest package.json to determine if it should emit ESM to CJS outputs.\nSince in bit we don't have a package.json usually, TS will just emit CJS\nThis option will force TS to emit ESM"
                    },
                    "signature": "(property) esm?: boolean",
                    "name": "esm",
                    "type": {
                      "__schema": "KeywordTypeSchema",
                      "location": {
                        "filePath": "typescript-compiler-options.ts",
                        "line": 41,
                        "character": 9
                      },
                      "name": "boolean"
                    },
                    "isOptional": true
                  },
                  {
                    "__schema": "VariableLikeSchema",
                    "location": {
                      "filePath": "typescript-compiler-options.ts",
                      "line": 46,
                      "character": 3
                    },
                    "doc": {
                      "__schema": "DocSchema",
                      "location": {
                        "filePath": "typescript-compiler-options.ts",
                        "line": 43,
                        "character": 3
                      },
                      "raw": "/**\n   * instance of typescript to use.\n   */",
                      "comment": "instance of typescript to use."
                    },
                    "signature": "(property) typescript?: any",
                    "name": "typescript",
                    "type": {
                      "__schema": "KeywordTypeSchema",
                      "location": {
                        "filePath": "typescript-compiler-options.ts",
                        "line": 46,
                        "character": 16
                      },
                      "name": "any"
                    },
                    "isOptional": true
                  },
                  {
                    "__schema": "VariableLikeSchema",
                    "location": {
                      "filePath": "typescript-compiler-options.ts",
                      "line": 53,
                      "character": 3
                    },
                    "doc": {
                      "__schema": "DocSchema",
                      "location": {
                        "filePath": "typescript-compiler-options.ts",
                        "line": 50,
                        "character": 3
                      },
                      "raw": "/**\n   * array of tsconfig transformers to apply.\n   */",
                      "comment": "array of tsconfig transformers to apply."
                    },
                    "signature": "(property) transformers?: TsConfigTransformer[]",
                    "name": "transformers",
                    "type": {
                      "__schema": "TypeArraySchema",
                      "location": {
                        "filePath": "typescript-compiler-options.ts",
                        "line": 53,
                        "character": 18
                      },
                      "type": {
                        "__schema": "TypeRefSchema",
                        "location": {
                          "filePath": "typescript-compiler-options.ts",
                          "line": 53,
                          "character": 18
                        },
                        "name": "TsConfigTransformer",
                        "componentId": {
                          "scope": "teambit.typescript",
                          "name": "typescript"
                        }
                      }
                    },
                    "isOptional": true
                  },
                  {
                    "__schema": "VariableLikeSchema",
                    "location": {
                      "filePath": "typescript-compiler-options.ts",
                      "line": 58,
                      "character": 3
                    },
                    "doc": {
                      "__schema": "DocSchema",
                      "location": {
                        "filePath": "typescript-compiler-options.ts",
                        "line": 55,
                        "character": 3
                      },
                      "raw": "/**\n   * array of transpilation transformers to apply.\n   */",
                      "comment": "array of transpilation transformers to apply."
                    },
                    "signature": "(property) typescriptTransformers?: CustomTransformers",
                    "name": "typescriptTransformers",
                    "type": {
                      "__schema": "TypeRefSchema",
                      "location": {
                        "filePath": "typescript-compiler-options.ts",
                        "line": 58,
                        "character": 3
                      },
                      "name": "CustomTransformers",
                      "packageName": "typescript"
                    },
                    "isOptional": true
                  }
                ]
              },
              {
                "__schema": "TypeRefSchema",
                "location": {
                  "filePath": "typescript-compiler-options.ts",
                  "line": 59,
                  "character": 5
                },
                "name": "Partial",
                "typeArgs": [
                  {
                    "__schema": "TypeRefSchema",
                    "location": {
                      "filePath": "typescript-compiler-options.ts",
                      "line": 59,
                      "character": 13
                    },
                    "name": "CompilerOptions",
                    "packageName": "typescript"
                  }
                ]
              }
            ]
          }
        },
        {
          "__schema": "TypeSchema",
          "location": {
            "filePath": "typescript-compiler-options.ts",
            "line": 61,
            "character": 1
          },
          "signature": "type TsCompilerOptionsWithoutTsConfig = {\n    typescript?: any;\n    compilerOptions?: TsCompilerOptions;\n    types?: string[];\n    name?: string;\n    distDir?: string;\n    distGlobPatterns?: string[];\n    shouldCopyNonSupportedFiles?: boolean;\n    artifactName?: string;\n    compileJs?: boolean;\n    compileJsx?: boolean;\n    esm?: boolean;\n    transformers?: TsConfigTransformer[];\n    typescriptTransformers?: CustomTransformers;\n}",
          "name": "TsCompilerOptionsWithoutTsConfig",
          "type": {
            "__schema": "TypeRefSchema",
            "location": {
              "filePath": "typescript-compiler-options.ts",
              "line": 61,
              "character": 48
            },
            "name": "Omit",
            "typeArgs": [
              {
                "__schema": "TypeRefSchema",
                "location": {
                  "filePath": "typescript-compiler-options.ts",
                  "line": 62,
                  "character": 3
                },
                "name": "TypeScriptCompilerOptions"
              },
              {
                "__schema": "LiteralTypeSchema",
                "location": {
                  "filePath": "typescript-compiler-options.ts",
                  "line": 63,
                  "character": 3
                },
                "name": "'tsconfig'"
              }
            ]
          }
        }
      ],
      "internals": []
    },
    {
      "__schema": "ModuleSchema",
      "location": {
        "filePath": "get-ts-config.ts",
        "line": 1,
        "character": 1
      },
      "exports": [
        {
          "__schema": "TypeSchema",
          "location": {
            "filePath": "get-ts-config.ts",
            "line": 6,
            "character": 1
          },
          "signature": "type ComputeTsConfigOptions = {\n    tsconfig?: string;\n    compilerOptions?: CompilerOptions;\n}",
          "name": "ComputeTsConfigOptions",
          "type": {
            "__schema": "TypeLiteralSchema",
            "location": {
              "filePath": "get-ts-config.ts",
              "line": 6,
              "character": 38
            },
            "members": [
              {
                "__schema": "VariableLikeSchema",
                "location": {
                  "filePath": "get-ts-config.ts",
                  "line": 10,
                  "character": 3
                },
                "doc": {
                  "__schema": "DocSchema",
                  "location": {
                    "filePath": "get-ts-config.ts",
                    "line": 7,
                    "character": 3
                  },
                  "raw": "/**\n   * tsconfig.\n   */",
                  "comment": "tsconfig."
                },
                "signature": "(property) tsconfig?: string",
                "name": "tsconfig",
                "type": {
                  "__schema": "KeywordTypeSchema",
                  "location": {
                    "filePath": "get-ts-config.ts",
                    "line": 10,
                    "character": 14
                  },
                  "name": "string"
                },
                "isOptional": true
              },
              {
                "__schema": "VariableLikeSchema",
                "location": {
                  "filePath": "get-ts-config.ts",
                  "line": 15,
                  "character": 3
                },
                "doc": {
                  "__schema": "DocSchema",
                  "location": {
                    "filePath": "get-ts-config.ts",
                    "line": 12,
                    "character": 3
                  },
                  "raw": "/**\n   * if provided, ignoring tsconfig.\n   */",
                  "comment": "if provided, ignoring tsconfig."
                },
                "signature": "(property) compilerOptions?: CompilerOptions",
                "name": "compilerOptions",
                "type": {
                  "__schema": "TypeRefSchema",
                  "location": {
                    "filePath": "get-ts-config.ts",
                    "line": 15,
                    "character": 3
                  },
                  "name": "CompilerOptions",
                  "packageName": "typescript"
                },
                "isOptional": true
              }
            ]
          }
        },
        {
          "__schema": "FunctionLikeSchema",
          "location": {
            "filePath": "get-ts-config.ts",
            "line": 18,
            "character": 1
          },
          "signature": "function computeTsConfig({ tsconfig, compilerOptions, }: ComputeTsConfigOptions): Except<TsConfigJson, \"extends\"> | {\n    compilerOptions: CompilerOptions;\n}",
          "name": "computeTsConfig",
          "params": [
            {
              "__schema": "ParameterSchema",
              "location": {
                "filePath": "get-ts-config.ts",
                "line": 18,
                "character": 33
              },
              "name": "{ tsconfig, compilerOptions }",
              "type": {
                "__schema": "TypeRefSchema",
                "location": {
                  "filePath": "get-ts-config.ts",
                  "line": 21,
                  "character": 4
                },
                "name": "ComputeTsConfigOptions",
                "internalFilePath": "get-ts-config.ts"
              },
              "isOptional": false,
              "objectBindingNodes": [
                {
                  "__schema": "InferenceTypeSchema",
                  "location": {
                    "filePath": "get-ts-config.ts",
                    "line": 19,
                    "character": 3
                  },
                  "name": "tsconfig",
                  "type": "string",
                  "isSpread": false
                },
                {
                  "__schema": "InferenceTypeSchema",
                  "location": {
                    "filePath": "get-ts-config.ts",
                    "line": 20,
                    "character": 3
                  },
                  "name": "compilerOptions",
                  "type": "CompilerOptions",
                  "isSpread": false
                }
              ],
              "isSpread": false
            }
          ],
          "returnType": {
            "__schema": "InferenceTypeSchema",
            "location": {
              "filePath": "get-ts-config.ts",
              "line": 18,
              "character": 1
            },
            "type": "Except<TsConfigJson, \"extends\"> | {\n    compilerOptions: CompilerOptions;\n}"
          },
          "modifiers": [
            "export"
          ]
        }
      ],
      "internals": []
    },
    {
      "__schema": "ModuleSchema",
      "location": {
        "filePath": "expand-include-exclude.ts",
        "line": 1,
        "character": 1
      },
      "exports": [
        {
          "__schema": "FunctionLikeSchema",
          "location": {
            "filePath": "expand-include-exclude.ts",
            "line": 15,
            "character": 1
          },
          "doc": {
            "__schema": "DocSchema",
            "location": {
              "filePath": "expand-include-exclude.ts",
              "line": 6,
              "character": 1
            },
            "raw": "/**\n * It takes a tsconfig.json file, a list of component directories, and returns a new tsconfig.json file with the include\n * and exclude properties expanded to include all the component directories\n * @param {string} tsConfigPath - The path to the tsconfig.json file.\n * @param {TsConfigJson} tsConfig - The tsconfig.json file that we're going to modify.\n * @param {string[]} compDirs - An array of paths to the component directories.\n * @returns the tsConfig object.\n */",
            "comment": "It takes a tsconfig.json file, a list of component directories, and returns a new tsconfig.json file with the include\nand exclude properties expanded to include all the component directories",
            "tags": [
              {
                "__schema": "PropertyLikeTagSchema",
                "location": {
                  "filePath": "expand-include-exclude.ts",
                  "line": 9,
                  "character": 4
                },
                "name": "tsConfigPath",
                "tagName": "parameter",
                "comment": "- The path to the tsconfig.json file.",
                "type": {
                  "__schema": "KeywordTypeSchema",
                  "location": {
                    "filePath": "expand-include-exclude.ts",
                    "line": 9,
                    "character": 12
                  },
                  "name": "string"
                }
              },
              {
                "__schema": "PropertyLikeTagSchema",
                "location": {
                  "filePath": "expand-include-exclude.ts",
                  "line": 10,
                  "character": 4
                },
                "name": "tsConfig",
                "tagName": "parameter",
                "comment": "- The tsconfig.json file that we're going to modify.",
                "type": {
                  "__schema": "TypeRefSchema",
                  "location": {
                    "filePath": "expand-include-exclude.ts",
                    "line": 10,
                    "character": 12
                  },
                  "name": "TsConfigJson",
                  "packageName": "get-tsconfig"
                }
              },
              {
                "__schema": "PropertyLikeTagSchema",
                "location": {
                  "filePath": "expand-include-exclude.ts",
                  "line": 11,
                  "character": 4
                },
                "name": "compDirs",
                "tagName": "parameter",
                "comment": "- An array of paths to the component directories.",
                "type": {
                  "__schema": "TypeArraySchema",
                  "location": {
                    "filePath": "expand-include-exclude.ts",
                    "line": 11,
                    "character": 12
                  },
                  "type": {
                    "__schema": "KeywordTypeSchema",
                    "location": {
                      "filePath": "expand-include-exclude.ts",
                      "line": 11,
                      "character": 12
                    },
                    "name": "string"
                  }
                }
              },
              {
                "__schema": "ReturnTagSchema",
                "location": {
                  "filePath": "expand-include-exclude.ts",
                  "line": 12,
                  "character": 4
                },
                "tagName": "return",
                "comment": "the tsConfig object."
              }
            ]
          },
          "signature": "function expandIncludeExclude(tsConfigPath: string, tsConfig: TsConfigJson, compDirs: string[], globalTypesDir?: string): TsConfigJson",
          "name": "expandIncludeExclude",
          "params": [
            {
              "__schema": "ParameterSchema",
              "location": {
                "filePath": "expand-include-exclude.ts",
                "line": 16,
                "character": 3
              },
              "name": "tsConfigPath",
              "type": {
                "__schema": "KeywordTypeSchema",
                "location": {
                  "filePath": "expand-include-exclude.ts",
                  "line": 16,
                  "character": 17
                },
                "name": "string"
              },
              "isOptional": false,
              "isSpread": false
            },
            {
              "__schema": "ParameterSchema",
              "location": {
                "filePath": "expand-include-exclude.ts",
                "line": 17,
                "character": 3
              },
              "name": "tsConfig",
              "type": {
                "__schema": "TypeRefSchema",
                "location": {
                  "filePath": "expand-include-exclude.ts",
                  "line": 17,
                  "character": 13
                },
                "name": "TsConfigJson",
                "packageName": "get-tsconfig"
              },
              "isOptional": false,
              "isSpread": false
            },
            {
              "__schema": "ParameterSchema",
              "location": {
                "filePath": "expand-include-exclude.ts",
                "line": 18,
                "character": 3
              },
              "name": "compDirs",
              "type": {
                "__schema": "TypeArraySchema",
                "location": {
                  "filePath": "expand-include-exclude.ts",
                  "line": 18,
                  "character": 13
                },
                "type": {
                  "__schema": "KeywordTypeSchema",
                  "location": {
                    "filePath": "expand-include-exclude.ts",
                    "line": 18,
                    "character": 13
                  },
                  "name": "string"
                }
              },
              "isOptional": false,
              "isSpread": false
            },
            {
              "__schema": "ParameterSchema",
              "location": {
                "filePath": "expand-include-exclude.ts",
                "line": 19,
                "character": 3
              },
              "name": "globalTypesDir",
              "type": {
                "__schema": "KeywordTypeSchema",
                "location": {
                  "filePath": "expand-include-exclude.ts",
                  "line": 19,
                  "character": 20
                },
                "name": "string"
              },
              "isOptional": true,
              "isSpread": false
            }
          ],
          "returnType": {
            "__schema": "TypeRefSchema",
            "location": {
              "filePath": "expand-include-exclude.ts",
              "line": 15,
              "character": 1
            },
            "name": "TsConfigJson",
            "packageName": "get-tsconfig"
          },
          "modifiers": [
            "export"
          ]
        }
      ],
      "internals": []
    }
  ],
  "componentId": {
    "scope": "teambit.typescript",
    "name": "typescript-compiler",
    "version": "6bf1dcfc0d8db8b051259d21706946b4d2f9feca"
  },
  "taggedModuleExports": []
}