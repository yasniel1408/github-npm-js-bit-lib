"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.compareUrl = void 0;
const url_parse_1 = __importDefault(require("url-parse"));
function compareUrl(baseUrl, toMatchUrl, { exact, strict } = {}) {
    if (baseUrl === toMatchUrl)
        return true;
    if (!strict) {
        // remove any trailing slashes, e.g. '.../?query=...', '.../#hash...', '.../'
        baseUrl = baseUrl.replace(/\/(?=[?#]|$)/, '');
        toMatchUrl = toMatchUrl.replace(/\/(?=[?#]|$)/, '');
    }
    const base = url_parse_1.default(baseUrl);
    const match = url_parse_1.default(toMatchUrl);
    const subUrl = isSubUrl(base, match);
    const exactMatch = !exact || isExactMatch(base, match);
    const strictMatch = !strict || isStrictMatch(base, match);
    return subUrl && exactMatch && strictMatch;
}
exports.compareUrl = compareUrl;
function isSubUrl(base, match) {
    return ((!match.protocol || match.protocol === base.protocol) &&
        (!match.hostname || match.hostname === base.hostname) &&
        (!match.port || match.port === base.port) &&
        (!match.pathname || base.pathname.startsWith(match.pathname)) &&
        (!match.query || isSubObject(match.query, base.query)) &&
        (!match.hash || match.hash === base.hash) &&
        (!match.password || match.password === base.password) &&
        (!match.username || match.username === base.username));
}
function isExactMatch(base, match) {
    return ((!match.pathname || base.pathname === match.pathname) && (!match.query || isSubObject(base.query, match.query)));
}
function isStrictMatch(base, match) {
    return !match.pathname || base.pathname.endsWith('/') === match.pathname.endsWith('/');
}
/** returns true when all items in source are also be in target, i.e. source âŠ† target */
function isSubObject(source, target) {
    return Object.keys(source).every((key) => source[key] === target[key]);
}
//# sourceMappingURL=compare-url.js.map