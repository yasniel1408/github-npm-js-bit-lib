import React, { ComponentType, ReactNode } from 'react';
import { ErrorBoundary } from 'react-error-boundary';
// @ts-ignore
import { createRoot } from 'react-dom/client';

/**
 * a reference to a provider function.
 */
export type MounterProvider = ComponentType<{ children: ReactNode }>;

/**
 * create a mounter.
 */
export function createMounter(Provider: MounterProvider = React.Fragment): any {
  return (Composition: React.ComponentType) => {
    const rootDoc = document.getElementById('root');
    const root = createRoot(rootDoc!);
    root.render(
      // @ts-ignore TODO: remove this after release.
      <ErrorBoundary fallback={<></>}>
        <Provider>
          <Composition />
        </Provider>
      </ErrorBoundary>
    );
  };
}

export default createMounter;
