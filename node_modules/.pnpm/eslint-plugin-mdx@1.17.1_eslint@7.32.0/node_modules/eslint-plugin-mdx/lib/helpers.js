"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getBuiltinRule = exports.getGlobals = void 0;
const getGlobals = (sources, initialGlobals = {}) => (Array.isArray(sources)
    ? // eslint-disable-next-line @typescript-eslint/no-unnecessary-type-assertion
        sources
    : Object.keys(sources)).reduce((globals, source) => Object.assign(globals, {
    [source]: false,
}), 
// eslint-disable-next-line @typescript-eslint/prefer-reduce-type-parameter
initialGlobals);
exports.getGlobals = getGlobals;
const PRIVATE_API_VERSION = 8;
const getBuiltinRule = (ruleId) => {
    // TODO: Remove this when we drop support for ESLint < 8
    // eslint-disable-next-line @typescript-eslint/no-require-imports, @typescript-eslint/no-var-requires
    const { version: eslintVersion } = require('eslint/package.json');
    const majorVersion = Number.parseInt(eslintVersion.split('.')[0], 10);
    /* istanbul ignore next */
    if (majorVersion < PRIVATE_API_VERSION) {
        // eslint-disable-next-line @typescript-eslint/no-require-imports, @typescript-eslint/no-var-requires
        return require(`eslint/lib/rules/${ruleId}`);
    }
    // prettier-ignore
    return (
    // eslint-disable-next-line @typescript-eslint/consistent-type-imports, @typescript-eslint/no-require-imports, @typescript-eslint/no-var-requires
    require('eslint/use-at-your-own-risk')).builtinRules.get(ruleId);
};
exports.getBuiltinRule = getBuiltinRule;
//# sourceMappingURL=helpers.js.map