import { CompilerOptions as TsCompilerOptions } from 'typescript';
import type { CompilerOptions } from '@teambit/compiler';
import { TsConfigTransformer } from '@teambit/typescript';

export type TypeScriptCompilerOptions = {
  /**
   * path to tsconfig to use during compilation.
   */
  tsconfig?: string;

  /**
   * a compiler options object.
   */
  compilerOptions?: TsCompilerOptions;

  /**
   * path for .d.ts files to include during build.
   */
  types?: string[];

  /**
   * Run the compiler for .js files. this will only affect whether to run the compiler on the files
   * or not. It won't change the tsconfig to support or not support js files.
   */
  compileJs?: boolean;

  /**
   * Run the compiler for .js files. this will only affect whether to run the compiler on the files
   * or not. It won't change the tsconfig to support or not support jsx files.
   */
  compileJsx?: boolean;

  /**
   * instance of typescript to use.
   */
  typescript?: any;

  // envContext: EnvContext

  /**
   * array of transformers to apply.
   */
  transformers?: TsConfigTransformer[];
} & Partial<CompilerOptions>;

export type TsCompilerOptionsWithoutTsConfig = Omit<
  TypeScriptCompilerOptions,
  'tsconfig'
>;
